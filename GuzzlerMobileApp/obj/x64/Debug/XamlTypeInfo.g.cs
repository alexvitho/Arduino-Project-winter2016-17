//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



namespace GuzzlerMobileApp
{
    public partial class App : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
    private global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlTypeInfoProvider _provider;

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            if(_provider == null)
            {
                _provider = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            if(_provider == null)
            {
                _provider = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByName(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }
}

namespace GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByType(type);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            var userXamlType = xamlType as global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType;
            if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
            {
                global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForType(type);
                if (libXamlType != null)
                {
                    if(libXamlType.IsConstructible || xamlType == null)
                    {
                        xamlType = libXamlType;
                    }
                }
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByName(typeName);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            var userXamlType = xamlType as global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType;
            if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
            {
                global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForName(typeName);
                if (libXamlType != null)
                {
                    if(libXamlType.IsConstructible || xamlType == null)
                    {
                        xamlType = libXamlType;
                    }
                }
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
            {
                return xamlMember;
            }
            xamlMember = CreateXamlMember(longMemberName);
            if (xamlMember != null)
            {
                _xamlMembers.Add(longMemberName, xamlMember);
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[131];
            _typeNameTable[0] = "GuzzlerMobileApp.ExtendedSplash";
            _typeNameTable[1] = "Windows.UI.Xaml.Controls.Page";
            _typeNameTable[2] = "Windows.UI.Xaml.Controls.UserControl";
            _typeNameTable[3] = "WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart";
            _typeNameTable[4] = "Windows.UI.Xaml.Controls.Control";
            _typeNameTable[5] = "System.Collections.ObjectModel.Collection`1<WinRTXamlToolkit.Controls.DataVisualization.Charting.ISeries>";
            _typeNameTable[6] = "Object";
            _typeNameTable[7] = "WinRTXamlToolkit.Controls.DataVisualization.Charting.ISeries";
            _typeNameTable[8] = "System.Collections.ObjectModel.ObservableCollection`1<Object>";
            _typeNameTable[9] = "System.Collections.ObjectModel.Collection`1<Object>";
            _typeNameTable[10] = "Windows.UI.Xaml.Style";
            _typeNameTable[11] = "System.Collections.ObjectModel.Collection`1<WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis>";
            _typeNameTable[12] = "WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis";
            _typeNameTable[13] = "WinRTXamlToolkit.Controls.DataVisualization.Charting.AxisOrientation";
            _typeNameTable[14] = "System.Enum";
            _typeNameTable[15] = "System.ValueType";
            _typeNameTable[16] = "System.Collections.ObjectModel.ObservableCollection`1<WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxisListener>";
            _typeNameTable[17] = "System.Collections.ObjectModel.Collection`1<WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxisListener>";
            _typeNameTable[18] = "WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxisListener";
            _typeNameTable[19] = "System.Collections.ObjectModel.ObservableCollection`1<WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis>";
            _typeNameTable[20] = "System.Collections.ObjectModel.ReadOnlyCollection`1<WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis>";
            _typeNameTable[21] = "System.Collections.ObjectModel.Collection`1<Windows.UI.Xaml.ResourceDictionary>";
            _typeNameTable[22] = "Windows.UI.Xaml.ResourceDictionary";
            _typeNameTable[23] = "WinRTXamlToolkit.Controls.DataVisualization.Charting.PieSeries";
            _typeNameTable[24] = "WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries";
            _typeNameTable[25] = "WinRTXamlToolkit.Controls.DataVisualization.Charting.Series";
            _typeNameTable[26] = "System.Collections.IEnumerable";
            _typeNameTable[27] = "String";
            _typeNameTable[28] = "Windows.UI.Xaml.Data.Binding";
            _typeNameTable[29] = "WinRTXamlToolkit.Controls.DataVisualization.Charting.AnimationSequence";
            _typeNameTable[30] = "Windows.UI.Xaml.Media.Animation.EasingFunctionBase";
            _typeNameTable[31] = "Boolean";
            _typeNameTable[32] = "TimeSpan";
            _typeNameTable[33] = "WinRTXamlToolkit.Controls.DataVisualization.Charting.ISeriesHost";
            _typeNameTable[34] = "WinRTXamlToolkit.Controls.DataVisualization.Legend";
            _typeNameTable[35] = "WinRTXamlToolkit.Controls.HeaderedItemsControl";
            _typeNameTable[36] = "Windows.UI.Xaml.Controls.ItemsControl";
            _typeNameTable[37] = "Windows.UI.Xaml.Visibility";
            _typeNameTable[38] = "Windows.UI.Xaml.DataTemplate";
            _typeNameTable[39] = "WinRTXamlToolkit.Controls.DataVisualization.Charting.LineSeries";
            _typeNameTable[40] = "WinRTXamlToolkit.Controls.DataVisualization.Charting.LineAreaBaseSeries`1<WinRTXamlToolkit.Controls.DataVisualization.Charting.LineDataPoint>";
            _typeNameTable[41] = "WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSingleSeriesWithAxes";
            _typeNameTable[42] = "WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeriesWithAxes";
            _typeNameTable[43] = "Windows.UI.Xaml.Media.PointCollection";
            _typeNameTable[44] = "WinRTXamlToolkit.Controls.DataVisualization.Charting.IRangeAxis";
            _typeNameTable[45] = "System.Nullable`1<Int32>";
            _typeNameTable[46] = "GuzzlerMobileApp.views.chartTry";
            _typeNameTable[47] = "System.Collections.Generic.List`1<GuzzlerMobileApp.DataModel.powerDayItem>";
            _typeNameTable[48] = "GuzzlerMobileApp.DataModel.powerDayItem";
            _typeNameTable[49] = "Int32";
            _typeNameTable[50] = "Double";
            _typeNameTable[51] = "System.Collections.ObjectModel.ObservableCollection`1<GuzzlerMobileApp.DataModel.powerDayItem>";
            _typeNameTable[52] = "System.Collections.ObjectModel.Collection`1<GuzzlerMobileApp.DataModel.powerDayItem>";
            _typeNameTable[53] = "LiveCharts.Uwp.PieChart";
            _typeNameTable[54] = "LiveCharts.Uwp.Charts.Base.Chart";
            _typeNameTable[55] = "LiveCharts.LegendLocation";
            _typeNameTable[56] = "LiveCharts.SeriesCollection";
            _typeNameTable[57] = "LiveCharts.Helpers.NoisyCollection`1<LiveCharts.Definitions.Series.ISeriesView>";
            _typeNameTable[58] = "LiveCharts.Definitions.Series.ISeriesView";
            _typeNameTable[59] = "LiveCharts.SeriesAlgorithm";
            _typeNameTable[60] = "LiveCharts.IChartValues";
            _typeNameTable[61] = "System.Func`2<LiveCharts.ChartPoint, String>";
            _typeNameTable[62] = "System.MulticastDelegate";
            _typeNameTable[63] = "System.Delegate";
            _typeNameTable[64] = "LiveCharts.Uwp.ColorsCollection";
            _typeNameTable[65] = "System.Collections.Generic.List`1<Windows.UI.Color>";
            _typeNameTable[66] = "Windows.UI.Color";
            _typeNameTable[67] = "Byte";
            _typeNameTable[68] = "LiveCharts.Uwp.AxesCollection";
            _typeNameTable[69] = "LiveCharts.Helpers.NoisyCollection`1<LiveCharts.Uwp.Axis>";
            _typeNameTable[70] = "LiveCharts.Uwp.Axis";
            _typeNameTable[71] = "Windows.UI.Xaml.FrameworkElement";
            _typeNameTable[72] = "LiveCharts.AxisCore";
            _typeNameTable[73] = "System.Collections.Generic.IList`1<String>";
            _typeNameTable[74] = "LiveCharts.Uwp.SectionsCollection";
            _typeNameTable[75] = "LiveCharts.Helpers.NoisyCollection`1<LiveCharts.Uwp.AxisSection>";
            _typeNameTable[76] = "LiveCharts.Uwp.AxisSection";
            _typeNameTable[77] = "LiveCharts.AxisSectionCore";
            _typeNameTable[78] = "Windows.UI.Xaml.Media.Brush";
            _typeNameTable[79] = "Windows.UI.Xaml.Media.DoubleCollection";
            _typeNameTable[80] = "System.Func`2<Double, String>";
            _typeNameTable[81] = "LiveCharts.Definitions.Charts.ISeparatorView";
            _typeNameTable[82] = "LiveCharts.AxisPosition";
            _typeNameTable[83] = "Windows.UI.Xaml.Media.FontFamily";
            _typeNameTable[84] = "Windows.UI.Text.FontWeight";
            _typeNameTable[85] = "Windows.UI.Text.FontStyle";
            _typeNameTable[86] = "Windows.UI.Text.FontStretch";
            _typeNameTable[87] = "LiveCharts.AxisOrientation";
            _typeNameTable[88] = "LiveCharts.ZoomingOptions";
            _typeNameTable[89] = "LiveCharts.ScrollMode";
            _typeNameTable[90] = "LiveCharts.UpdaterState";
            _typeNameTable[91] = "LiveCharts.Charts.ChartCore";
            _typeNameTable[92] = "System.Collections.Generic.IEnumerable`1<LiveCharts.Definitions.Series.ISeriesView>";
            _typeNameTable[93] = "GuzzlerMobileApp.views.dailyColumn";
            _typeNameTable[94] = "LiveCharts.Uwp.CartesianChart";
            _typeNameTable[95] = "LiveCharts.VisualElementsCollection";
            _typeNameTable[96] = "LiveCharts.Helpers.NoisyCollection`1<LiveCharts.Definitions.Charts.ICartesianVisualElement>";
            _typeNameTable[97] = "LiveCharts.Definitions.Charts.ICartesianVisualElement";
            _typeNameTable[98] = "GuzzlerMobileApp.views.dailyLog";
            _typeNameTable[99] = "System.DateTime";
            _typeNameTable[100] = "String[]";
            _typeNameTable[101] = "System.Array";
            _typeNameTable[102] = "GuzzlerMobileApp.views.dailyPie";
            _typeNameTable[103] = "System.Collections.Generic.List`1<GuzzlerMobileApp.DataModel.piePowerItem>";
            _typeNameTable[104] = "GuzzlerMobileApp.DataModel.piePowerItem";
            _typeNameTable[105] = "GuzzlerMobileApp.views.deviceDetails";
            _typeNameTable[106] = "GuzzlerMobileApp.views.devices";
            _typeNameTable[107] = "WinRTXamlToolkit.Controls.DataVisualization.Charting.ColumnSeries";
            _typeNameTable[108] = "WinRTXamlToolkit.Controls.DataVisualization.Charting.ColumnBarBaseSeries`1<WinRTXamlToolkit.Controls.DataVisualization.Charting.ColumnDataPoint>";
            _typeNameTable[109] = "GuzzlerMobileApp.views.estimatedCost";
            _typeNameTable[110] = "GuzzlerMobileApp.views.historyLog";
            _typeNameTable[111] = "GuzzlerMobileApp.views.message";
            _typeNameTable[112] = "Windows.UI.Xaml.Controls.ContentDialog";
            _typeNameTable[113] = "Windows.UI.Xaml.Controls.ContentControl";
            _typeNameTable[114] = "GuzzlerMobileApp.views.MyResult";
            _typeNameTable[115] = "GuzzlerMobileApp.views.PointShapeLineExample";
            _typeNameTable[116] = "LiveCharts.Uwp.LineSeries";
            _typeNameTable[117] = "LiveCharts.Uwp.Series";
            _typeNameTable[118] = "System.Collections.Generic.IEnumerable`1<LiveCharts.ChartPoint>";
            _typeNameTable[119] = "LiveCharts.Uwp.PointGeometry";
            _typeNameTable[120] = "LiveCharts.Uwp.Separator";
            _typeNameTable[121] = "GuzzlerMobileApp.views.realTimePower";
            _typeNameTable[122] = "LiveCharts.ChartValues`1<GuzzlerMobileApp.views.MeasureModel>";
            _typeNameTable[123] = "LiveCharts.Helpers.NoisyCollection`1<GuzzlerMobileApp.views.MeasureModel>";
            _typeNameTable[124] = "GuzzlerMobileApp.views.MeasureModel";
            _typeNameTable[125] = "Windows.UI.Xaml.DispatcherTimer";
            _typeNameTable[126] = "System.Random";
            _typeNameTable[127] = "GuzzlerMobileApp.views.regDev";
            _typeNameTable[128] = "GuzzlerMobileApp.views.specialDev";
            _typeNameTable[129] = "LiveCharts.Uwp.Points.PieSlice";
            _typeNameTable[130] = "Windows.UI.Xaml.Shapes.Path";

            _typeTable = new global::System.Type[131];
            _typeTable[0] = typeof(global::GuzzlerMobileApp.ExtendedSplash);
            _typeTable[1] = typeof(global::Windows.UI.Xaml.Controls.Page);
            _typeTable[2] = typeof(global::Windows.UI.Xaml.Controls.UserControl);
            _typeTable[3] = typeof(global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart);
            _typeTable[4] = typeof(global::Windows.UI.Xaml.Controls.Control);
            _typeTable[5] = typeof(global::System.Collections.ObjectModel.Collection<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.ISeries>);
            _typeTable[6] = typeof(global::System.Object);
            _typeTable[7] = typeof(global::WinRTXamlToolkit.Controls.DataVisualization.Charting.ISeries);
            _typeTable[8] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::System.Object>);
            _typeTable[9] = typeof(global::System.Collections.ObjectModel.Collection<global::System.Object>);
            _typeTable[10] = typeof(global::Windows.UI.Xaml.Style);
            _typeTable[11] = typeof(global::System.Collections.ObjectModel.Collection<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis>);
            _typeTable[12] = typeof(global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis);
            _typeTable[13] = typeof(global::WinRTXamlToolkit.Controls.DataVisualization.Charting.AxisOrientation);
            _typeTable[14] = typeof(global::System.Enum);
            _typeTable[15] = typeof(global::System.ValueType);
            _typeTable[16] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxisListener>);
            _typeTable[17] = typeof(global::System.Collections.ObjectModel.Collection<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxisListener>);
            _typeTable[18] = typeof(global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxisListener);
            _typeTable[19] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis>);
            _typeTable[20] = typeof(global::System.Collections.ObjectModel.ReadOnlyCollection<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis>);
            _typeTable[21] = typeof(global::System.Collections.ObjectModel.Collection<global::Windows.UI.Xaml.ResourceDictionary>);
            _typeTable[22] = typeof(global::Windows.UI.Xaml.ResourceDictionary);
            _typeTable[23] = typeof(global::WinRTXamlToolkit.Controls.DataVisualization.Charting.PieSeries);
            _typeTable[24] = typeof(global::WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries);
            _typeTable[25] = typeof(global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Series);
            _typeTable[26] = typeof(global::System.Collections.IEnumerable);
            _typeTable[27] = typeof(global::System.String);
            _typeTable[28] = typeof(global::Windows.UI.Xaml.Data.Binding);
            _typeTable[29] = typeof(global::WinRTXamlToolkit.Controls.DataVisualization.Charting.AnimationSequence);
            _typeTable[30] = typeof(global::Windows.UI.Xaml.Media.Animation.EasingFunctionBase);
            _typeTable[31] = typeof(global::System.Boolean);
            _typeTable[32] = typeof(global::System.TimeSpan);
            _typeTable[33] = typeof(global::WinRTXamlToolkit.Controls.DataVisualization.Charting.ISeriesHost);
            _typeTable[34] = typeof(global::WinRTXamlToolkit.Controls.DataVisualization.Legend);
            _typeTable[35] = typeof(global::WinRTXamlToolkit.Controls.HeaderedItemsControl);
            _typeTable[36] = typeof(global::Windows.UI.Xaml.Controls.ItemsControl);
            _typeTable[37] = typeof(global::Windows.UI.Xaml.Visibility);
            _typeTable[38] = typeof(global::Windows.UI.Xaml.DataTemplate);
            _typeTable[39] = typeof(global::WinRTXamlToolkit.Controls.DataVisualization.Charting.LineSeries);
            _typeTable[40] = typeof(global::WinRTXamlToolkit.Controls.DataVisualization.Charting.LineAreaBaseSeries<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.LineDataPoint>);
            _typeTable[41] = typeof(global::WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSingleSeriesWithAxes);
            _typeTable[42] = typeof(global::WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeriesWithAxes);
            _typeTable[43] = typeof(global::Windows.UI.Xaml.Media.PointCollection);
            _typeTable[44] = typeof(global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IRangeAxis);
            _typeTable[45] = typeof(global::System.Nullable<global::System.Int32>);
            _typeTable[46] = typeof(global::GuzzlerMobileApp.views.chartTry);
            _typeTable[47] = typeof(global::System.Collections.Generic.List<global::GuzzlerMobileApp.DataModel.powerDayItem>);
            _typeTable[48] = typeof(global::GuzzlerMobileApp.DataModel.powerDayItem);
            _typeTable[49] = typeof(global::System.Int32);
            _typeTable[50] = typeof(global::System.Double);
            _typeTable[51] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::GuzzlerMobileApp.DataModel.powerDayItem>);
            _typeTable[52] = typeof(global::System.Collections.ObjectModel.Collection<global::GuzzlerMobileApp.DataModel.powerDayItem>);
            _typeTable[53] = typeof(global::LiveCharts.Uwp.PieChart);
            _typeTable[54] = typeof(global::LiveCharts.Uwp.Charts.Base.Chart);
            _typeTable[55] = typeof(global::LiveCharts.LegendLocation);
            _typeTable[56] = typeof(global::LiveCharts.SeriesCollection);
            _typeTable[57] = typeof(global::LiveCharts.Helpers.NoisyCollection<global::LiveCharts.Definitions.Series.ISeriesView>);
            _typeTable[58] = typeof(global::LiveCharts.Definitions.Series.ISeriesView);
            _typeTable[59] = typeof(global::LiveCharts.SeriesAlgorithm);
            _typeTable[60] = typeof(global::LiveCharts.IChartValues);
            _typeTable[61] = typeof(global::System.Func<global::LiveCharts.ChartPoint, global::System.String>);
            _typeTable[62] = typeof(global::System.MulticastDelegate);
            _typeTable[63] = typeof(global::System.Delegate);
            _typeTable[64] = typeof(global::LiveCharts.Uwp.ColorsCollection);
            _typeTable[65] = typeof(global::System.Collections.Generic.List<global::Windows.UI.Color>);
            _typeTable[66] = typeof(global::Windows.UI.Color);
            _typeTable[67] = typeof(global::System.Byte);
            _typeTable[68] = typeof(global::LiveCharts.Uwp.AxesCollection);
            _typeTable[69] = typeof(global::LiveCharts.Helpers.NoisyCollection<global::LiveCharts.Uwp.Axis>);
            _typeTable[70] = typeof(global::LiveCharts.Uwp.Axis);
            _typeTable[71] = typeof(global::Windows.UI.Xaml.FrameworkElement);
            _typeTable[72] = typeof(global::LiveCharts.AxisCore);
            _typeTable[73] = typeof(global::System.Collections.Generic.IList<global::System.String>);
            _typeTable[74] = typeof(global::LiveCharts.Uwp.SectionsCollection);
            _typeTable[75] = typeof(global::LiveCharts.Helpers.NoisyCollection<global::LiveCharts.Uwp.AxisSection>);
            _typeTable[76] = typeof(global::LiveCharts.Uwp.AxisSection);
            _typeTable[77] = typeof(global::LiveCharts.AxisSectionCore);
            _typeTable[78] = typeof(global::Windows.UI.Xaml.Media.Brush);
            _typeTable[79] = typeof(global::Windows.UI.Xaml.Media.DoubleCollection);
            _typeTable[80] = typeof(global::System.Func<global::System.Double, global::System.String>);
            _typeTable[81] = typeof(global::LiveCharts.Definitions.Charts.ISeparatorView);
            _typeTable[82] = typeof(global::LiveCharts.AxisPosition);
            _typeTable[83] = typeof(global::Windows.UI.Xaml.Media.FontFamily);
            _typeTable[84] = typeof(global::Windows.UI.Text.FontWeight);
            _typeTable[85] = typeof(global::Windows.UI.Text.FontStyle);
            _typeTable[86] = typeof(global::Windows.UI.Text.FontStretch);
            _typeTable[87] = typeof(global::LiveCharts.AxisOrientation);
            _typeTable[88] = typeof(global::LiveCharts.ZoomingOptions);
            _typeTable[89] = typeof(global::LiveCharts.ScrollMode);
            _typeTable[90] = typeof(global::LiveCharts.UpdaterState);
            _typeTable[91] = typeof(global::LiveCharts.Charts.ChartCore);
            _typeTable[92] = typeof(global::System.Collections.Generic.IEnumerable<global::LiveCharts.Definitions.Series.ISeriesView>);
            _typeTable[93] = typeof(global::GuzzlerMobileApp.views.dailyColumn);
            _typeTable[94] = typeof(global::LiveCharts.Uwp.CartesianChart);
            _typeTable[95] = typeof(global::LiveCharts.VisualElementsCollection);
            _typeTable[96] = typeof(global::LiveCharts.Helpers.NoisyCollection<global::LiveCharts.Definitions.Charts.ICartesianVisualElement>);
            _typeTable[97] = typeof(global::LiveCharts.Definitions.Charts.ICartesianVisualElement);
            _typeTable[98] = typeof(global::GuzzlerMobileApp.views.dailyLog);
            _typeTable[99] = typeof(global::System.DateTime);
            _typeTable[100] = typeof(global::System.String[]);
            _typeTable[101] = typeof(global::System.Array);
            _typeTable[102] = typeof(global::GuzzlerMobileApp.views.dailyPie);
            _typeTable[103] = typeof(global::System.Collections.Generic.List<global::GuzzlerMobileApp.DataModel.piePowerItem>);
            _typeTable[104] = typeof(global::GuzzlerMobileApp.DataModel.piePowerItem);
            _typeTable[105] = typeof(global::GuzzlerMobileApp.views.deviceDetails);
            _typeTable[106] = typeof(global::GuzzlerMobileApp.views.devices);
            _typeTable[107] = typeof(global::WinRTXamlToolkit.Controls.DataVisualization.Charting.ColumnSeries);
            _typeTable[108] = typeof(global::WinRTXamlToolkit.Controls.DataVisualization.Charting.ColumnBarBaseSeries<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.ColumnDataPoint>);
            _typeTable[109] = typeof(global::GuzzlerMobileApp.views.estimatedCost);
            _typeTable[110] = typeof(global::GuzzlerMobileApp.views.historyLog);
            _typeTable[111] = typeof(global::GuzzlerMobileApp.views.message);
            _typeTable[112] = typeof(global::Windows.UI.Xaml.Controls.ContentDialog);
            _typeTable[113] = typeof(global::Windows.UI.Xaml.Controls.ContentControl);
            _typeTable[114] = typeof(global::GuzzlerMobileApp.views.MyResult);
            _typeTable[115] = typeof(global::GuzzlerMobileApp.views.PointShapeLineExample);
            _typeTable[116] = typeof(global::LiveCharts.Uwp.LineSeries);
            _typeTable[117] = typeof(global::LiveCharts.Uwp.Series);
            _typeTable[118] = typeof(global::System.Collections.Generic.IEnumerable<global::LiveCharts.ChartPoint>);
            _typeTable[119] = typeof(global::LiveCharts.Uwp.PointGeometry);
            _typeTable[120] = typeof(global::LiveCharts.Uwp.Separator);
            _typeTable[121] = typeof(global::GuzzlerMobileApp.views.realTimePower);
            _typeTable[122] = typeof(global::LiveCharts.ChartValues<global::GuzzlerMobileApp.views.MeasureModel>);
            _typeTable[123] = typeof(global::LiveCharts.Helpers.NoisyCollection<global::GuzzlerMobileApp.views.MeasureModel>);
            _typeTable[124] = typeof(global::GuzzlerMobileApp.views.MeasureModel);
            _typeTable[125] = typeof(global::Windows.UI.Xaml.DispatcherTimer);
            _typeTable[126] = typeof(global::System.Random);
            _typeTable[127] = typeof(global::GuzzlerMobileApp.views.regDev);
            _typeTable[128] = typeof(global::GuzzlerMobileApp.views.specialDev);
            _typeTable[129] = typeof(global::LiveCharts.Uwp.Points.PieSlice);
            _typeTable[130] = typeof(global::Windows.UI.Xaml.Shapes.Path);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_3_Chart() { return new global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart(); }
        private object Activate_5_Collection() { return new global::System.Collections.ObjectModel.Collection<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.ISeries>(); }
        private object Activate_8_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::System.Object>(); }
        private object Activate_9_Collection() { return new global::System.Collections.ObjectModel.Collection<global::System.Object>(); }
        private object Activate_11_Collection() { return new global::System.Collections.ObjectModel.Collection<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis>(); }
        private object Activate_16_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxisListener>(); }
        private object Activate_17_Collection() { return new global::System.Collections.ObjectModel.Collection<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxisListener>(); }
        private object Activate_19_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis>(); }
        private object Activate_21_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Windows.UI.Xaml.ResourceDictionary>(); }
        private object Activate_23_PieSeries() { return new global::WinRTXamlToolkit.Controls.DataVisualization.Charting.PieSeries(); }
        private object Activate_34_Legend() { return new global::WinRTXamlToolkit.Controls.DataVisualization.Legend(); }
        private object Activate_35_HeaderedItemsControl() { return new global::WinRTXamlToolkit.Controls.HeaderedItemsControl(); }
        private object Activate_39_LineSeries() { return new global::WinRTXamlToolkit.Controls.DataVisualization.Charting.LineSeries(); }
        private object Activate_46_chartTry() { return new global::GuzzlerMobileApp.views.chartTry(); }
        private object Activate_47_List() { return new global::System.Collections.Generic.List<global::GuzzlerMobileApp.DataModel.powerDayItem>(); }
        private object Activate_48_powerDayItem() { return new global::GuzzlerMobileApp.DataModel.powerDayItem(); }
        private object Activate_51_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::GuzzlerMobileApp.DataModel.powerDayItem>(); }
        private object Activate_52_Collection() { return new global::System.Collections.ObjectModel.Collection<global::GuzzlerMobileApp.DataModel.powerDayItem>(); }
        private object Activate_53_PieChart() { return new global::LiveCharts.Uwp.PieChart(); }
        private object Activate_56_SeriesCollection() { return new global::LiveCharts.SeriesCollection(); }
        private object Activate_57_NoisyCollection() { return new global::LiveCharts.Helpers.NoisyCollection<global::LiveCharts.Definitions.Series.ISeriesView>(); }
        private object Activate_64_ColorsCollection() { return new global::LiveCharts.Uwp.ColorsCollection(); }
        private object Activate_65_List() { return new global::System.Collections.Generic.List<global::Windows.UI.Color>(); }
        private object Activate_68_AxesCollection() { return new global::LiveCharts.Uwp.AxesCollection(); }
        private object Activate_69_NoisyCollection() { return new global::LiveCharts.Helpers.NoisyCollection<global::LiveCharts.Uwp.Axis>(); }
        private object Activate_70_Axis() { return new global::LiveCharts.Uwp.Axis(); }
        private object Activate_74_SectionsCollection() { return new global::LiveCharts.Uwp.SectionsCollection(); }
        private object Activate_75_NoisyCollection() { return new global::LiveCharts.Helpers.NoisyCollection<global::LiveCharts.Uwp.AxisSection>(); }
        private object Activate_76_AxisSection() { return new global::LiveCharts.Uwp.AxisSection(); }
        private object Activate_94_CartesianChart() { return new global::LiveCharts.Uwp.CartesianChart(); }
        private object Activate_95_VisualElementsCollection() { return new global::LiveCharts.VisualElementsCollection(); }
        private object Activate_96_NoisyCollection() { return new global::LiveCharts.Helpers.NoisyCollection<global::LiveCharts.Definitions.Charts.ICartesianVisualElement>(); }
        private object Activate_103_List() { return new global::System.Collections.Generic.List<global::GuzzlerMobileApp.DataModel.piePowerItem>(); }
        private object Activate_106_devices() { return new global::GuzzlerMobileApp.views.devices(); }
        private object Activate_107_ColumnSeries() { return new global::WinRTXamlToolkit.Controls.DataVisualization.Charting.ColumnSeries(); }
        private object Activate_111_message() { return new global::GuzzlerMobileApp.views.message(); }
        private object Activate_115_PointShapeLineExample() { return new global::GuzzlerMobileApp.views.PointShapeLineExample(); }
        private object Activate_116_LineSeries() { return new global::LiveCharts.Uwp.LineSeries(); }
        private object Activate_119_PointGeometry() { return new global::LiveCharts.Uwp.PointGeometry(); }
        private object Activate_120_Separator() { return new global::LiveCharts.Uwp.Separator(); }
        private object Activate_122_ChartValues() { return new global::LiveCharts.ChartValues<global::GuzzlerMobileApp.views.MeasureModel>(); }
        private object Activate_123_NoisyCollection() { return new global::LiveCharts.Helpers.NoisyCollection<global::GuzzlerMobileApp.views.MeasureModel>(); }
        private object Activate_124_MeasureModel() { return new global::GuzzlerMobileApp.views.MeasureModel(); }
        private object Activate_126_Random() { return new global::System.Random(); }
        private object Activate_127_regDev() { return new global::GuzzlerMobileApp.views.regDev(); }
        private object Activate_129_PieSlice() { return new global::LiveCharts.Uwp.Points.PieSlice(); }
        private void VectorAdd_5_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.ISeries>)instance;
            var newItem = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.ISeries)item;
            collection.Add(newItem);
        }
        private void VectorAdd_8_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::System.Object>)instance;
            var newItem = (global::System.Object)item;
            collection.Add(newItem);
        }
        private void VectorAdd_9_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::System.Object>)instance;
            var newItem = (global::System.Object)item;
            collection.Add(newItem);
        }
        private void VectorAdd_11_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis>)instance;
            var newItem = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis)item;
            collection.Add(newItem);
        }
        private void VectorAdd_16_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxisListener>)instance;
            var newItem = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxisListener)item;
            collection.Add(newItem);
        }
        private void VectorAdd_17_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxisListener>)instance;
            var newItem = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxisListener)item;
            collection.Add(newItem);
        }
        private void VectorAdd_19_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis>)instance;
            var newItem = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis)item;
            collection.Add(newItem);
        }
        private void VectorAdd_20_ReadOnlyCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis>)instance;
            var newItem = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis)item;
            collection.Add(newItem);
        }
        private void VectorAdd_21_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.ResourceDictionary>)instance;
            var newItem = (global::Windows.UI.Xaml.ResourceDictionary)item;
            collection.Add(newItem);
        }
        private void VectorAdd_47_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::GuzzlerMobileApp.DataModel.powerDayItem>)instance;
            var newItem = (global::GuzzlerMobileApp.DataModel.powerDayItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_51_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::GuzzlerMobileApp.DataModel.powerDayItem>)instance;
            var newItem = (global::GuzzlerMobileApp.DataModel.powerDayItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_52_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::GuzzlerMobileApp.DataModel.powerDayItem>)instance;
            var newItem = (global::GuzzlerMobileApp.DataModel.powerDayItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_56_SeriesCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::LiveCharts.Definitions.Series.ISeriesView>)instance;
            var newItem = (global::LiveCharts.Definitions.Series.ISeriesView)item;
            collection.Add(newItem);
        }
        private void VectorAdd_57_NoisyCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::LiveCharts.Definitions.Series.ISeriesView>)instance;
            var newItem = (global::LiveCharts.Definitions.Series.ISeriesView)item;
            collection.Add(newItem);
        }
        private void VectorAdd_64_ColorsCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Windows.UI.Color>)instance;
            var newItem = (global::Windows.UI.Color)item;
            collection.Add(newItem);
        }
        private void VectorAdd_65_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Windows.UI.Color>)instance;
            var newItem = (global::Windows.UI.Color)item;
            collection.Add(newItem);
        }
        private void VectorAdd_68_AxesCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::LiveCharts.Uwp.Axis>)instance;
            var newItem = (global::LiveCharts.Uwp.Axis)item;
            collection.Add(newItem);
        }
        private void VectorAdd_69_NoisyCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::LiveCharts.Uwp.Axis>)instance;
            var newItem = (global::LiveCharts.Uwp.Axis)item;
            collection.Add(newItem);
        }
        private void VectorAdd_73_IList(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::System.String>)instance;
            var newItem = (global::System.String)item;
            collection.Add(newItem);
        }
        private void VectorAdd_74_SectionsCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::LiveCharts.Uwp.AxisSection>)instance;
            var newItem = (global::LiveCharts.Uwp.AxisSection)item;
            collection.Add(newItem);
        }
        private void VectorAdd_75_NoisyCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::LiveCharts.Uwp.AxisSection>)instance;
            var newItem = (global::LiveCharts.Uwp.AxisSection)item;
            collection.Add(newItem);
        }
        private void VectorAdd_95_VisualElementsCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::LiveCharts.Definitions.Charts.ICartesianVisualElement>)instance;
            var newItem = (global::LiveCharts.Definitions.Charts.ICartesianVisualElement)item;
            collection.Add(newItem);
        }
        private void VectorAdd_96_NoisyCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::LiveCharts.Definitions.Charts.ICartesianVisualElement>)instance;
            var newItem = (global::LiveCharts.Definitions.Charts.ICartesianVisualElement)item;
            collection.Add(newItem);
        }
        private void VectorAdd_103_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::GuzzlerMobileApp.DataModel.piePowerItem>)instance;
            var newItem = (global::GuzzlerMobileApp.DataModel.piePowerItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_122_ChartValues(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::GuzzlerMobileApp.views.MeasureModel>)instance;
            var newItem = (global::GuzzlerMobileApp.views.MeasureModel)item;
            collection.Add(newItem);
        }
        private void VectorAdd_123_NoisyCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::GuzzlerMobileApp.views.MeasureModel>)instance;
            var newItem = (global::GuzzlerMobileApp.views.MeasureModel)item;
            collection.Add(newItem);
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  GuzzlerMobileApp.ExtendedSplash
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 1:   //  Windows.UI.Xaml.Controls.Page
                xamlType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  Windows.UI.Xaml.Controls.UserControl
                xamlType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 3:   //  WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_3_Chart;
                userType.SetContentPropertyName("WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart.Series");
                userType.AddMemberName("Series");
                userType.AddMemberName("Title");
                userType.AddMemberName("TitleStyle");
                userType.AddMemberName("LegendStyle");
                userType.AddMemberName("Axes");
                userType.AddMemberName("ActualAxes");
                userType.AddMemberName("ChartAreaStyle");
                userType.AddMemberName("LegendItems");
                userType.AddMemberName("LegendTitle");
                userType.AddMemberName("PlotAreaStyle");
                userType.AddMemberName("Palette");
                xamlType = userType;
                break;

            case 4:   //  Windows.UI.Xaml.Controls.Control
                xamlType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 5:   //  System.Collections.ObjectModel.Collection`1<WinRTXamlToolkit.Controls.DataVisualization.Charting.ISeries>
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_5_Collection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 6:   //  Object
                xamlType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 7:   //  WinRTXamlToolkit.Controls.DataVisualization.Charting.ISeries
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.AddMemberName("LegendItems");
                xamlType = userType;
                break;

            case 8:   //  System.Collections.ObjectModel.ObservableCollection`1<Object>
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Object>"));
                userType.CollectionAdd = VectorAdd_8_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 9:   //  System.Collections.ObjectModel.Collection`1<Object>
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_9_Collection;
                userType.CollectionAdd = VectorAdd_9_Collection;
                xamlType = userType;
                break;

            case 10:   //  Windows.UI.Xaml.Style
                xamlType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 11:   //  System.Collections.ObjectModel.Collection`1<WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis>
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_11_Collection;
                userType.CollectionAdd = VectorAdd_11_Collection;
                xamlType = userType;
                break;

            case 12:   //  WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.AddMemberName("Orientation");
                userType.AddMemberName("RegisteredListeners");
                userType.AddMemberName("DependentAxes");
                xamlType = userType;
                break;

            case 13:   //  WinRTXamlToolkit.Controls.DataVisualization.Charting.AxisOrientation
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::WinRTXamlToolkit.Controls.DataVisualization.Charting.AxisOrientation.None);
                userType.AddEnumValue("X", global::WinRTXamlToolkit.Controls.DataVisualization.Charting.AxisOrientation.X);
                userType.AddEnumValue("Y", global::WinRTXamlToolkit.Controls.DataVisualization.Charting.AxisOrientation.Y);
                xamlType = userType;
                break;

            case 14:   //  System.Enum
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                xamlType = userType;
                break;

            case 15:   //  System.ValueType
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 16:   //  System.Collections.ObjectModel.ObservableCollection`1<WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxisListener>
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxisListener>"));
                userType.CollectionAdd = VectorAdd_16_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 17:   //  System.Collections.ObjectModel.Collection`1<WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxisListener>
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_17_Collection;
                userType.CollectionAdd = VectorAdd_17_Collection;
                xamlType = userType;
                break;

            case 18:   //  WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxisListener
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                xamlType = userType;
                break;

            case 19:   //  System.Collections.ObjectModel.ObservableCollection`1<WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis>
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis>"));
                userType.CollectionAdd = VectorAdd_19_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 20:   //  System.Collections.ObjectModel.ReadOnlyCollection`1<WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis>
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_20_ReadOnlyCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 21:   //  System.Collections.ObjectModel.Collection`1<Windows.UI.Xaml.ResourceDictionary>
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_21_Collection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 22:   //  Windows.UI.Xaml.ResourceDictionary
                xamlType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 23:   //  WinRTXamlToolkit.Controls.DataVisualization.Charting.PieSeries
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries"));
                userType.Activator = Activate_23_PieSeries;
                userType.AddMemberName("Palette");
                xamlType = userType;
                break;

            case 24:   //  WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.Series"));
                userType.AddMemberName("ItemsSource");
                userType.AddMemberName("IndependentValuePath");
                userType.AddMemberName("DependentValuePath");
                userType.AddMemberName("DependentValueBinding");
                userType.AddMemberName("IndependentValueBinding");
                userType.AddMemberName("AnimationSequence");
                userType.AddMemberName("TransitionEasingFunction");
                userType.AddMemberName("IsSelectionEnabled");
                userType.AddMemberName("SelectedItem");
                userType.AddMemberName("DataPointStyle");
                userType.AddMemberName("LegendItemStyle");
                userType.AddMemberName("TransitionDuration");
                xamlType = userType;
                break;

            case 25:   //  WinRTXamlToolkit.Controls.DataVisualization.Charting.Series
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.AddMemberName("SeriesHost");
                userType.AddMemberName("LegendItems");
                userType.AddMemberName("Title");
                xamlType = userType;
                break;

            case 26:   //  System.Collections.IEnumerable
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 27:   //  String
                xamlType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 28:   //  Windows.UI.Xaml.Data.Binding
                xamlType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 29:   //  WinRTXamlToolkit.Controls.DataVisualization.Charting.AnimationSequence
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Simultaneous", global::WinRTXamlToolkit.Controls.DataVisualization.Charting.AnimationSequence.Simultaneous);
                userType.AddEnumValue("FirstToLast", global::WinRTXamlToolkit.Controls.DataVisualization.Charting.AnimationSequence.FirstToLast);
                userType.AddEnumValue("LastToFirst", global::WinRTXamlToolkit.Controls.DataVisualization.Charting.AnimationSequence.LastToFirst);
                xamlType = userType;
                break;

            case 30:   //  Windows.UI.Xaml.Media.Animation.EasingFunctionBase
                xamlType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 31:   //  Boolean
                xamlType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 32:   //  TimeSpan
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 33:   //  WinRTXamlToolkit.Controls.DataVisualization.Charting.ISeriesHost
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 34:   //  WinRTXamlToolkit.Controls.DataVisualization.Legend
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("WinRTXamlToolkit.Controls.HeaderedItemsControl"));
                userType.Activator = Activate_34_Legend;
                userType.AddMemberName("TitleStyle");
                userType.AddMemberName("ContentVisibility");
                xamlType = userType;
                break;

            case 35:   //  WinRTXamlToolkit.Controls.HeaderedItemsControl
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.ItemsControl"));
                userType.Activator = Activate_35_HeaderedItemsControl;
                userType.AddMemberName("Header");
                userType.AddMemberName("HeaderTemplate");
                userType.AddMemberName("ItemContainerStyle");
                xamlType = userType;
                break;

            case 36:   //  Windows.UI.Xaml.Controls.ItemsControl
                xamlType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 37:   //  Windows.UI.Xaml.Visibility
                xamlType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 38:   //  Windows.UI.Xaml.DataTemplate
                xamlType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 39:   //  WinRTXamlToolkit.Controls.DataVisualization.Charting.LineSeries
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.LineAreaBaseSeries`1<WinRTXamlToolkit.Controls.DataVisualization.Charting.LineDataPoint>"));
                userType.Activator = Activate_39_LineSeries;
                userType.AddMemberName("Points");
                userType.AddMemberName("PolylineStyle");
                xamlType = userType;
                break;

            case 40:   //  WinRTXamlToolkit.Controls.DataVisualization.Charting.LineAreaBaseSeries`1<WinRTXamlToolkit.Controls.DataVisualization.Charting.LineDataPoint>
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSingleSeriesWithAxes"));
                userType.AddMemberName("DependentRangeAxis");
                userType.AddMemberName("IndependentAxis");
                userType.AddMemberName("ActualIndependentAxis");
                userType.AddMemberName("ActualDependentRangeAxis");
                xamlType = userType;
                break;

            case 41:   //  WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSingleSeriesWithAxes
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeriesWithAxes"));
                userType.AddMemberName("GlobalSeriesIndex");
                xamlType = userType;
                break;

            case 42:   //  WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeriesWithAxes
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries"));
                xamlType = userType;
                break;

            case 43:   //  Windows.UI.Xaml.Media.PointCollection
                xamlType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 44:   //  WinRTXamlToolkit.Controls.DataVisualization.Charting.IRangeAxis
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 45:   //  System.Nullable`1<Int32>
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 46:   //  GuzzlerMobileApp.views.chartTry
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_46_chartTry;
                userType.AddMemberName("intYVal");
                userType.AddMemberName("maxYVal");
                userType.AddMemberName("minYVal");
                userType.AddMemberName("intXVal");
                userType.AddMemberName("maxXVal");
                userType.AddMemberName("minXVal");
                userType.AddMemberName("Data");
                userType.AddMemberName("Data1");
                userType.AddMemberName("Data2");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 47:   //  System.Collections.Generic.List`1<GuzzlerMobileApp.DataModel.powerDayItem>
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_47_List;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 48:   //  GuzzlerMobileApp.DataModel.powerDayItem
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_48_powerDayItem;
                userType.AddMemberName("Day");
                userType.AddMemberName("Val");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 49:   //  Int32
                xamlType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 50:   //  Double
                xamlType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 51:   //  System.Collections.ObjectModel.ObservableCollection`1<GuzzlerMobileApp.DataModel.powerDayItem>
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<GuzzlerMobileApp.DataModel.powerDayItem>"));
                userType.CollectionAdd = VectorAdd_51_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 52:   //  System.Collections.ObjectModel.Collection`1<GuzzlerMobileApp.DataModel.powerDayItem>
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_52_Collection;
                userType.CollectionAdd = VectorAdd_52_Collection;
                xamlType = userType;
                break;

            case 53:   //  LiveCharts.Uwp.PieChart
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("LiveCharts.Uwp.Charts.Base.Chart"));
                userType.Activator = Activate_53_PieChart;
                userType.AddMemberName("InnerRadius");
                userType.AddMemberName("StartingRotationAngle");
                userType.AddMemberName("HoverPushOut");
                xamlType = userType;
                break;

            case 54:   //  LiveCharts.Uwp.Charts.Base.Chart
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.AddMemberName("LegendLocation");
                userType.AddMemberName("Series");
                userType.AddMemberName("AnimationsSpeed");
                userType.AddMemberName("Hoverable");
                userType.AddMemberName("IsMocked");
                userType.AddMemberName("SeriesColors");
                userType.AddMemberName("AxisY");
                userType.AddMemberName("AxisX");
                userType.AddMemberName("ChartLegend");
                userType.AddMemberName("Zoom");
                userType.AddMemberName("DisableAnimations");
                userType.AddMemberName("DataTooltip");
                userType.AddMemberName("ScrollMode");
                userType.AddMemberName("ScrollHorizontalFrom");
                userType.AddMemberName("ScrollHorizontalTo");
                userType.AddMemberName("ScrollVerticalFrom");
                userType.AddMemberName("ScrollVerticalTo");
                userType.AddMemberName("ScrollBarFill");
                userType.AddMemberName("ZoomingSpeed");
                userType.AddMemberName("UpdaterState");
                userType.AddMemberName("Model");
                userType.AddMemberName("HasTooltip");
                userType.AddMemberName("HasDataClickEventAttached");
                userType.AddMemberName("IsControlLoaded");
                userType.AddMemberName("IsInDesignMode");
                userType.AddMemberName("ActualSeries");
                userType.AddMemberName("TooltipTimeout");
                xamlType = userType;
                break;

            case 55:   //  LiveCharts.LegendLocation
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::LiveCharts.LegendLocation.None);
                userType.AddEnumValue("Top", global::LiveCharts.LegendLocation.Top);
                userType.AddEnumValue("Bottom", global::LiveCharts.LegendLocation.Bottom);
                userType.AddEnumValue("Left", global::LiveCharts.LegendLocation.Left);
                userType.AddEnumValue("Right", global::LiveCharts.LegendLocation.Right);
                xamlType = userType;
                break;

            case 56:   //  LiveCharts.SeriesCollection
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("LiveCharts.Helpers.NoisyCollection`1<LiveCharts.Definitions.Series.ISeriesView>"));
                userType.CollectionAdd = VectorAdd_56_SeriesCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 57:   //  LiveCharts.Helpers.NoisyCollection`1<LiveCharts.Definitions.Series.ISeriesView>
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_57_NoisyCollection;
                userType.CollectionAdd = VectorAdd_57_NoisyCollection;
                xamlType = userType;
                break;

            case 58:   //  LiveCharts.Definitions.Series.ISeriesView
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.AddMemberName("Model");
                userType.AddMemberName("Values");
                userType.AddMemberName("DataLabels");
                userType.AddMemberName("ScalesXAt");
                userType.AddMemberName("ScalesYAt");
                userType.AddMemberName("Configuration");
                userType.AddMemberName("IsSeriesVisible");
                userType.AddMemberName("LabelPoint");
                userType.AddMemberName("ActualValues");
                xamlType = userType;
                break;

            case 59:   //  LiveCharts.SeriesAlgorithm
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 60:   //  LiveCharts.IChartValues
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 61:   //  System.Func`2<LiveCharts.ChartPoint, String>
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.MulticastDelegate"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 62:   //  System.MulticastDelegate
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Delegate"));
                xamlType = userType;
                break;

            case 63:   //  System.Delegate
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 64:   //  LiveCharts.Uwp.ColorsCollection
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.Generic.List`1<Windows.UI.Color>"));
                userType.CollectionAdd = VectorAdd_64_ColorsCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 65:   //  System.Collections.Generic.List`1<Windows.UI.Color>
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_65_List;
                userType.CollectionAdd = VectorAdd_65_List;
                xamlType = userType;
                break;

            case 66:   //  Windows.UI.Color
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.AddMemberName("A");
                userType.AddMemberName("B");
                userType.AddMemberName("G");
                userType.AddMemberName("R");
                xamlType = userType;
                break;

            case 67:   //  Byte
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 68:   //  LiveCharts.Uwp.AxesCollection
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("LiveCharts.Helpers.NoisyCollection`1<LiveCharts.Uwp.Axis>"));
                userType.CollectionAdd = VectorAdd_68_AxesCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 69:   //  LiveCharts.Helpers.NoisyCollection`1<LiveCharts.Uwp.Axis>
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_69_NoisyCollection;
                userType.CollectionAdd = VectorAdd_69_NoisyCollection;
                xamlType = userType;
                break;

            case 70:   //  LiveCharts.Uwp.Axis
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.FrameworkElement"));
                userType.Activator = Activate_70_Axis;
                userType.AddMemberName("Model");
                userType.AddMemberName("PreviousMaxValue");
                userType.AddMemberName("PreviousMinValue");
                userType.AddMemberName("Labels");
                userType.AddMemberName("Sections");
                userType.AddMemberName("LabelFormatter");
                userType.AddMemberName("Separator");
                userType.AddMemberName("ShowLabels");
                userType.AddMemberName("MaxValue");
                userType.AddMemberName("MinValue");
                userType.AddMemberName("MinRange");
                userType.AddMemberName("MaxRange");
                userType.AddMemberName("Title");
                userType.AddMemberName("Position");
                userType.AddMemberName("IsMerged");
                userType.AddMemberName("BarUnit");
                userType.AddMemberName("DisableAnimations");
                userType.AddMemberName("FontFamily");
                userType.AddMemberName("FontSize");
                userType.AddMemberName("FontWeight");
                userType.AddMemberName("FontStyle");
                userType.AddMemberName("FontStretch");
                userType.AddMemberName("Foreground");
                userType.AddMemberName("LabelsRotation");
                userType.AddMemberName("IsEnabled");
                userType.AddMemberName("AxisOrientation");
                xamlType = userType;
                break;

            case 71:   //  Windows.UI.Xaml.FrameworkElement
                xamlType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 72:   //  LiveCharts.AxisCore
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 73:   //  System.Collections.Generic.IList`1<String>
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.CollectionAdd = VectorAdd_73_IList;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 74:   //  LiveCharts.Uwp.SectionsCollection
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("LiveCharts.Helpers.NoisyCollection`1<LiveCharts.Uwp.AxisSection>"));
                userType.CollectionAdd = VectorAdd_74_SectionsCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 75:   //  LiveCharts.Helpers.NoisyCollection`1<LiveCharts.Uwp.AxisSection>
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_75_NoisyCollection;
                userType.CollectionAdd = VectorAdd_75_NoisyCollection;
                xamlType = userType;
                break;

            case 76:   //  LiveCharts.Uwp.AxisSection
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.FrameworkElement"));
                userType.Activator = Activate_76_AxisSection;
                userType.AddMemberName("Model");
                userType.AddMemberName("Label");
                userType.AddMemberName("Value");
                userType.AddMemberName("SectionWidth");
                userType.AddMemberName("Draggable");
                userType.AddMemberName("Stroke");
                userType.AddMemberName("Fill");
                userType.AddMemberName("StrokeThickness");
                userType.AddMemberName("StrokeDashArray");
                xamlType = userType;
                break;

            case 77:   //  LiveCharts.AxisSectionCore
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 78:   //  Windows.UI.Xaml.Media.Brush
                xamlType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 79:   //  Windows.UI.Xaml.Media.DoubleCollection
                xamlType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 80:   //  System.Func`2<Double, String>
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.MulticastDelegate"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 81:   //  LiveCharts.Definitions.Charts.ISeparatorView
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 82:   //  LiveCharts.AxisPosition
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("LeftBottom", global::LiveCharts.AxisPosition.LeftBottom);
                userType.AddEnumValue("RightTop", global::LiveCharts.AxisPosition.RightTop);
                xamlType = userType;
                break;

            case 83:   //  Windows.UI.Xaml.Media.FontFamily
                xamlType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 84:   //  Windows.UI.Text.FontWeight
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 85:   //  Windows.UI.Text.FontStyle
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Normal", global::Windows.UI.Text.FontStyle.Normal);
                userType.AddEnumValue("Oblique", global::Windows.UI.Text.FontStyle.Oblique);
                userType.AddEnumValue("Italic", global::Windows.UI.Text.FontStyle.Italic);
                xamlType = userType;
                break;

            case 86:   //  Windows.UI.Text.FontStretch
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Undefined", global::Windows.UI.Text.FontStretch.Undefined);
                userType.AddEnumValue("UltraCondensed", global::Windows.UI.Text.FontStretch.UltraCondensed);
                userType.AddEnumValue("ExtraCondensed", global::Windows.UI.Text.FontStretch.ExtraCondensed);
                userType.AddEnumValue("Condensed", global::Windows.UI.Text.FontStretch.Condensed);
                userType.AddEnumValue("SemiCondensed", global::Windows.UI.Text.FontStretch.SemiCondensed);
                userType.AddEnumValue("Normal", global::Windows.UI.Text.FontStretch.Normal);
                userType.AddEnumValue("SemiExpanded", global::Windows.UI.Text.FontStretch.SemiExpanded);
                userType.AddEnumValue("Expanded", global::Windows.UI.Text.FontStretch.Expanded);
                userType.AddEnumValue("ExtraExpanded", global::Windows.UI.Text.FontStretch.ExtraExpanded);
                userType.AddEnumValue("UltraExpanded", global::Windows.UI.Text.FontStretch.UltraExpanded);
                xamlType = userType;
                break;

            case 87:   //  LiveCharts.AxisOrientation
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::LiveCharts.AxisOrientation.None);
                userType.AddEnumValue("X", global::LiveCharts.AxisOrientation.X);
                userType.AddEnumValue("Y", global::LiveCharts.AxisOrientation.Y);
                xamlType = userType;
                break;

            case 88:   //  LiveCharts.ZoomingOptions
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::LiveCharts.ZoomingOptions.None);
                userType.AddEnumValue("X", global::LiveCharts.ZoomingOptions.X);
                userType.AddEnumValue("Y", global::LiveCharts.ZoomingOptions.Y);
                userType.AddEnumValue("Xy", global::LiveCharts.ZoomingOptions.Xy);
                xamlType = userType;
                break;

            case 89:   //  LiveCharts.ScrollMode
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::LiveCharts.ScrollMode.None);
                userType.AddEnumValue("X", global::LiveCharts.ScrollMode.X);
                userType.AddEnumValue("Y", global::LiveCharts.ScrollMode.Y);
                userType.AddEnumValue("XY", global::LiveCharts.ScrollMode.XY);
                xamlType = userType;
                break;

            case 90:   //  LiveCharts.UpdaterState
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Running", global::LiveCharts.UpdaterState.Running);
                userType.AddEnumValue("Paused", global::LiveCharts.UpdaterState.Paused);
                xamlType = userType;
                break;

            case 91:   //  LiveCharts.Charts.ChartCore
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 92:   //  System.Collections.Generic.IEnumerable`1<LiveCharts.Definitions.Series.ISeriesView>
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 93:   //  GuzzlerMobileApp.views.dailyColumn
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.AddMemberName("DevName");
                userType.AddMemberName("powerPerHour");
                userType.AddMemberName("DevGuzzeled");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 94:   //  LiveCharts.Uwp.CartesianChart
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("LiveCharts.Uwp.Charts.Base.Chart"));
                userType.Activator = Activate_94_CartesianChart;
                userType.AddMemberName("VisualElements");
                xamlType = userType;
                break;

            case 95:   //  LiveCharts.VisualElementsCollection
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("LiveCharts.Helpers.NoisyCollection`1<LiveCharts.Definitions.Charts.ICartesianVisualElement>"));
                userType.CollectionAdd = VectorAdd_95_VisualElementsCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 96:   //  LiveCharts.Helpers.NoisyCollection`1<LiveCharts.Definitions.Charts.ICartesianVisualElement>
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_96_NoisyCollection;
                userType.CollectionAdd = VectorAdd_96_NoisyCollection;
                xamlType = userType;
                break;

            case 97:   //  LiveCharts.Definitions.Charts.ICartesianVisualElement
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.AddMemberName("X");
                userType.AddMemberName("Y");
                userType.AddMemberName("AxisX");
                userType.AddMemberName("AxisY");
                xamlType = userType;
                break;

            case 98:   //  GuzzlerMobileApp.views.dailyLog
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.AddMemberName("DevName");
                userType.AddMemberName("Date");
                userType.AddMemberName("maxTimeVal");
                userType.AddMemberName("minTimeVal");
                userType.AddMemberName("Formatter");
                userType.AddMemberName("Series");
                userType.AddMemberName("Labels");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 99:   //  System.DateTime
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 100:   //  String[]
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Array"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 101:   //  System.Array
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 102:   //  GuzzlerMobileApp.views.dailyPie
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.AddMemberName("DevName");
                userType.AddMemberName("powerPartition");
                userType.AddMemberName("DevGuzzeled");
                userType.AddMemberName("PointLabel");
                userType.AddMemberName("Series");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 103:   //  System.Collections.Generic.List`1<GuzzlerMobileApp.DataModel.piePowerItem>
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_103_List;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 104:   //  GuzzlerMobileApp.DataModel.piePowerItem
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.AddMemberName("Dev");
                userType.AddMemberName("Val");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 105:   //  GuzzlerMobileApp.views.deviceDetails
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.AddMemberName("DevName");
                userType.AddMemberName("Manufacturer");
                userType.AddMemberName("GuzzlerId");
                userType.AddMemberName("DevType");
                userType.AddMemberName("Model");
                userType.AddMemberName("Serial");
                userType.AddMemberName("TimeCreated");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 106:   //  GuzzlerMobileApp.views.devices
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_106_devices;
                userType.AddMemberName("IsNextEnabled");
                userType.AddMemberName("ChosenDev");
                userType.AddMemberName("DevToRemove");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 107:   //  WinRTXamlToolkit.Controls.DataVisualization.Charting.ColumnSeries
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.ColumnBarBaseSeries`1<WinRTXamlToolkit.Controls.DataVisualization.Charting.ColumnDataPoint>"));
                userType.Activator = Activate_107_ColumnSeries;
                xamlType = userType;
                break;

            case 108:   //  WinRTXamlToolkit.Controls.DataVisualization.Charting.ColumnBarBaseSeries`1<WinRTXamlToolkit.Controls.DataVisualization.Charting.ColumnDataPoint>
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSingleSeriesWithAxes"));
                userType.AddMemberName("DependentRangeAxis");
                userType.AddMemberName("IndependentAxis");
                userType.AddMemberName("ActualDependentRangeAxis");
                userType.AddMemberName("ActualIndependentAxis");
                xamlType = userType;
                break;

            case 109:   //  GuzzlerMobileApp.views.estimatedCost
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.AddMemberName("DevName");
                userType.AddMemberName("Tariff");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 110:   //  GuzzlerMobileApp.views.historyLog
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.AddMemberName("DevName");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 111:   //  GuzzlerMobileApp.views.message
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.ContentDialog"));
                userType.Activator = Activate_111_message;
                userType.AddMemberName("Result");
                userType.AddMemberName("mTitle");
                userType.AddMemberName("Msg");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 112:   //  Windows.UI.Xaml.Controls.ContentDialog
                xamlType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 113:   //  Windows.UI.Xaml.Controls.ContentControl
                xamlType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 114:   //  GuzzlerMobileApp.views.MyResult
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Yes", global::GuzzlerMobileApp.views.MyResult.Yes);
                userType.AddEnumValue("No", global::GuzzlerMobileApp.views.MyResult.No);
                userType.AddEnumValue("Cancle", global::GuzzlerMobileApp.views.MyResult.Cancle);
                userType.AddEnumValue("Nothing", global::GuzzlerMobileApp.views.MyResult.Nothing);
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 115:   //  GuzzlerMobileApp.views.PointShapeLineExample
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_115_PointShapeLineExample;
                userType.AddMemberName("SeriesCollection");
                userType.AddMemberName("Labels");
                userType.AddMemberName("YFormatter");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 116:   //  LiveCharts.Uwp.LineSeries
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("LiveCharts.Uwp.Series"));
                userType.Activator = Activate_116_LineSeries;
                userType.AddMemberName("PointGeometrySize");
                userType.AddMemberName("PointForeround");
                userType.AddMemberName("LineSmoothness");
                userType.AddMemberName("AreaLimit");
                xamlType = userType;
                break;

            case 117:   //  LiveCharts.Uwp.Series
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.FrameworkElement"));
                userType.AddMemberName("Values");
                userType.AddMemberName("StrokeThickness");
                userType.AddMemberName("Model");
                userType.AddMemberName("ActualValues");
                userType.AddMemberName("IsSeriesVisible");
                userType.AddMemberName("ChartPoints");
                userType.AddMemberName("Title");
                userType.AddMemberName("Stroke");
                userType.AddMemberName("Fill");
                userType.AddMemberName("DataLabels");
                userType.AddMemberName("FontFamily");
                userType.AddMemberName("FontSize");
                userType.AddMemberName("FontWeight");
                userType.AddMemberName("FontStyle");
                userType.AddMemberName("FontStretch");
                userType.AddMemberName("Foreground");
                userType.AddMemberName("StrokeDashArray");
                userType.AddMemberName("PointGeometry");
                userType.AddMemberName("ScalesXAt");
                userType.AddMemberName("ScalesYAt");
                userType.AddMemberName("LabelPoint");
                userType.AddMemberName("Configuration");
                xamlType = userType;
                break;

            case 118:   //  System.Collections.Generic.IEnumerable`1<LiveCharts.ChartPoint>
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 119:   //  LiveCharts.Uwp.PointGeometry
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 120:   //  LiveCharts.Uwp.Separator
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_120_Separator;
                userType.AddMemberName("Step");
                userType.AddMemberName("Chart");
                userType.AddMemberName("Stroke");
                userType.AddMemberName("StrokeThickness");
                userType.AddMemberName("StrokeDashArray");
                userType.AddMemberName("AxisOrientation");
                xamlType = userType;
                break;

            case 121:   //  GuzzlerMobileApp.views.realTimePower
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.AddMemberName("DevName");
                userType.AddMemberName("ChartValues");
                userType.AddMemberName("DateTimeFormatter");
                userType.AddMemberName("AxisStep");
                userType.AddMemberName("AxisMax");
                userType.AddMemberName("AxisMin");
                userType.AddMemberName("Timer");
                userType.AddMemberName("IsDataInjectionRunning");
                userType.AddMemberName("R");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 122:   //  LiveCharts.ChartValues`1<GuzzlerMobileApp.views.MeasureModel>
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("LiveCharts.Helpers.NoisyCollection`1<GuzzlerMobileApp.views.MeasureModel>"));
                userType.CollectionAdd = VectorAdd_122_ChartValues;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 123:   //  LiveCharts.Helpers.NoisyCollection`1<GuzzlerMobileApp.views.MeasureModel>
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_123_NoisyCollection;
                userType.CollectionAdd = VectorAdd_123_NoisyCollection;
                xamlType = userType;
                break;

            case 124:   //  GuzzlerMobileApp.views.MeasureModel
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_124_MeasureModel;
                userType.AddMemberName("DateTime");
                userType.AddMemberName("Value");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 125:   //  Windows.UI.Xaml.DispatcherTimer
                xamlType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 126:   //  System.Random
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 127:   //  GuzzlerMobileApp.views.regDev
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_127_regDev;
                userType.AddMemberName("DevName");
                userType.AddMemberName("Manufacturer");
                userType.AddMemberName("GuzzlerId");
                userType.AddMemberName("DevType");
                userType.AddMemberName("Model");
                userType.AddMemberName("Serial");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 128:   //  GuzzlerMobileApp.views.specialDev
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.AddMemberName("DeviceName");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 129:   //  LiveCharts.Uwp.Points.PieSlice
                userType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Shapes.Path"));
                userType.Activator = Activate_129_PieSlice;
                userType.AddMemberName("Radius");
                userType.AddMemberName("PushOut");
                userType.AddMemberName("InnerRadius");
                userType.AddMemberName("WedgeAngle");
                userType.AddMemberName("RotationAngle");
                userType.AddMemberName("XOffset");
                userType.AddMemberName("YOffset");
                userType.AddMemberName("Percentage");
                userType.AddMemberName("PieceValue");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 130:   //  Windows.UI.Xaml.Shapes.Path
                xamlType = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;
            }
            return xamlType;
        }

        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> _otherProviders;
        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> OtherProviders
        {
            get
            {
                if(_otherProviders == null)
                {
                    var otherProviders = new global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider>();
                    global::Windows.UI.Xaml.Markup.IXamlMetadataProvider provider;
                    provider = new global::LiveCharts.Uwp.UwpView_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::WinRTXamlToolkit.Controls.DataVisualization.WinRTXamlToolkit_Controls_DataVisualization_UWP_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::WinRTXamlToolkit.WinRTXamlToolkit_UWP_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    _otherProviders = otherProviders;
                }
                return _otherProviders;
            }
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForName(string typeName)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(typeName);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(type);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private object get_0_Chart_Series(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart)instance;
            return that.Series;
        }
        private void set_0_Chart_Series(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart)instance;
            that.Series = (global::System.Collections.ObjectModel.Collection<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.ISeries>)Value;
        }
        private object get_1_ISeries_LegendItems(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.ISeries)instance;
            return that.LegendItems;
        }
        private object get_2_Chart_Title(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart)instance;
            return that.Title;
        }
        private void set_2_Chart_Title(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart)instance;
            that.Title = (global::System.Object)Value;
        }
        private object get_3_Chart_TitleStyle(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart)instance;
            return that.TitleStyle;
        }
        private void set_3_Chart_TitleStyle(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart)instance;
            that.TitleStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_4_Chart_LegendStyle(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart)instance;
            return that.LegendStyle;
        }
        private void set_4_Chart_LegendStyle(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart)instance;
            that.LegendStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_5_Chart_Axes(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart)instance;
            return that.Axes;
        }
        private void set_5_Chart_Axes(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart)instance;
            that.Axes = (global::System.Collections.ObjectModel.Collection<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis>)Value;
        }
        private object get_6_IAxis_Orientation(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis)instance;
            return that.Orientation;
        }
        private void set_6_IAxis_Orientation(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis)instance;
            that.Orientation = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.AxisOrientation)Value;
        }
        private object get_7_IAxis_RegisteredListeners(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis)instance;
            return that.RegisteredListeners;
        }
        private object get_8_IAxis_DependentAxes(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis)instance;
            return that.DependentAxes;
        }
        private object get_9_Chart_ActualAxes(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart)instance;
            return that.ActualAxes;
        }
        private object get_10_Chart_ChartAreaStyle(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart)instance;
            return that.ChartAreaStyle;
        }
        private void set_10_Chart_ChartAreaStyle(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart)instance;
            that.ChartAreaStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_11_Chart_LegendItems(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart)instance;
            return that.LegendItems;
        }
        private object get_12_Chart_LegendTitle(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart)instance;
            return that.LegendTitle;
        }
        private void set_12_Chart_LegendTitle(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart)instance;
            that.LegendTitle = (global::System.Object)Value;
        }
        private object get_13_Chart_PlotAreaStyle(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart)instance;
            return that.PlotAreaStyle;
        }
        private void set_13_Chart_PlotAreaStyle(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart)instance;
            that.PlotAreaStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_14_Chart_Palette(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart)instance;
            return that.Palette;
        }
        private void set_14_Chart_Palette(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart)instance;
            that.Palette = (global::System.Collections.ObjectModel.Collection<global::Windows.UI.Xaml.ResourceDictionary>)Value;
        }
        private object get_15_DataPointSeries_ItemsSource(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries)instance;
            return that.ItemsSource;
        }
        private void set_15_DataPointSeries_ItemsSource(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries)instance;
            that.ItemsSource = (global::System.Collections.IEnumerable)Value;
        }
        private object get_16_DataPointSeries_IndependentValuePath(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries)instance;
            return that.IndependentValuePath;
        }
        private void set_16_DataPointSeries_IndependentValuePath(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries)instance;
            that.IndependentValuePath = (global::System.String)Value;
        }
        private object get_17_DataPointSeries_DependentValuePath(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries)instance;
            return that.DependentValuePath;
        }
        private void set_17_DataPointSeries_DependentValuePath(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries)instance;
            that.DependentValuePath = (global::System.String)Value;
        }
        private object get_18_PieSeries_Palette(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.PieSeries)instance;
            return that.Palette;
        }
        private void set_18_PieSeries_Palette(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.PieSeries)instance;
            that.Palette = (global::System.Collections.ObjectModel.Collection<global::Windows.UI.Xaml.ResourceDictionary>)Value;
        }
        private object get_19_DataPointSeries_DependentValueBinding(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries)instance;
            return that.DependentValueBinding;
        }
        private void set_19_DataPointSeries_DependentValueBinding(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries)instance;
            that.DependentValueBinding = (global::Windows.UI.Xaml.Data.Binding)Value;
        }
        private object get_20_DataPointSeries_IndependentValueBinding(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries)instance;
            return that.IndependentValueBinding;
        }
        private void set_20_DataPointSeries_IndependentValueBinding(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries)instance;
            that.IndependentValueBinding = (global::Windows.UI.Xaml.Data.Binding)Value;
        }
        private object get_21_DataPointSeries_AnimationSequence(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries)instance;
            return that.AnimationSequence;
        }
        private void set_21_DataPointSeries_AnimationSequence(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries)instance;
            that.AnimationSequence = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.AnimationSequence)Value;
        }
        private object get_22_DataPointSeries_TransitionEasingFunction(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries)instance;
            return that.TransitionEasingFunction;
        }
        private void set_22_DataPointSeries_TransitionEasingFunction(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries)instance;
            that.TransitionEasingFunction = (global::Windows.UI.Xaml.Media.Animation.EasingFunctionBase)Value;
        }
        private object get_23_DataPointSeries_IsSelectionEnabled(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries)instance;
            return that.IsSelectionEnabled;
        }
        private void set_23_DataPointSeries_IsSelectionEnabled(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries)instance;
            that.IsSelectionEnabled = (global::System.Boolean)Value;
        }
        private object get_24_DataPointSeries_SelectedItem(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries)instance;
            return that.SelectedItem;
        }
        private void set_24_DataPointSeries_SelectedItem(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries)instance;
            that.SelectedItem = (global::System.Object)Value;
        }
        private object get_25_DataPointSeries_DataPointStyle(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries)instance;
            return that.DataPointStyle;
        }
        private void set_25_DataPointSeries_DataPointStyle(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries)instance;
            that.DataPointStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_26_DataPointSeries_LegendItemStyle(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries)instance;
            return that.LegendItemStyle;
        }
        private void set_26_DataPointSeries_LegendItemStyle(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries)instance;
            that.LegendItemStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_27_DataPointSeries_TransitionDuration(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries)instance;
            return that.TransitionDuration;
        }
        private void set_27_DataPointSeries_TransitionDuration(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries)instance;
            that.TransitionDuration = (global::System.TimeSpan)Value;
        }
        private object get_28_Series_SeriesHost(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Series)instance;
            return that.SeriesHost;
        }
        private void set_28_Series_SeriesHost(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Series)instance;
            that.SeriesHost = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.ISeriesHost)Value;
        }
        private object get_29_Series_LegendItems(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Series)instance;
            return that.LegendItems;
        }
        private object get_30_Series_Title(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Series)instance;
            return that.Title;
        }
        private void set_30_Series_Title(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Series)instance;
            that.Title = (global::System.Object)Value;
        }
        private object get_31_Legend_TitleStyle(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Legend)instance;
            return that.TitleStyle;
        }
        private void set_31_Legend_TitleStyle(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Legend)instance;
            that.TitleStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_32_Legend_ContentVisibility(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Legend)instance;
            return that.ContentVisibility;
        }
        private object get_33_HeaderedItemsControl_Header(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.HeaderedItemsControl)instance;
            return that.Header;
        }
        private void set_33_HeaderedItemsControl_Header(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.HeaderedItemsControl)instance;
            that.Header = (global::System.Object)Value;
        }
        private object get_34_HeaderedItemsControl_HeaderTemplate(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.HeaderedItemsControl)instance;
            return that.HeaderTemplate;
        }
        private void set_34_HeaderedItemsControl_HeaderTemplate(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.HeaderedItemsControl)instance;
            that.HeaderTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_35_HeaderedItemsControl_ItemContainerStyle(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.HeaderedItemsControl)instance;
            return that.ItemContainerStyle;
        }
        private void set_35_HeaderedItemsControl_ItemContainerStyle(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.HeaderedItemsControl)instance;
            that.ItemContainerStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_36_LineSeries_Points(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.LineSeries)instance;
            return that.Points;
        }
        private object get_37_LineSeries_PolylineStyle(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.LineSeries)instance;
            return that.PolylineStyle;
        }
        private void set_37_LineSeries_PolylineStyle(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.LineSeries)instance;
            that.PolylineStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_38_LineAreaBaseSeries_DependentRangeAxis(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.LineAreaBaseSeries<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.LineDataPoint>)instance;
            return that.DependentRangeAxis;
        }
        private void set_38_LineAreaBaseSeries_DependentRangeAxis(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.LineAreaBaseSeries<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.LineDataPoint>)instance;
            that.DependentRangeAxis = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IRangeAxis)Value;
        }
        private object get_39_LineAreaBaseSeries_IndependentAxis(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.LineAreaBaseSeries<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.LineDataPoint>)instance;
            return that.IndependentAxis;
        }
        private void set_39_LineAreaBaseSeries_IndependentAxis(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.LineAreaBaseSeries<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.LineDataPoint>)instance;
            that.IndependentAxis = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis)Value;
        }
        private object get_40_LineAreaBaseSeries_ActualIndependentAxis(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.LineAreaBaseSeries<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.LineDataPoint>)instance;
            return that.ActualIndependentAxis;
        }
        private object get_41_LineAreaBaseSeries_ActualDependentRangeAxis(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.LineAreaBaseSeries<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.LineDataPoint>)instance;
            return that.ActualDependentRangeAxis;
        }
        private object get_42_DataPointSingleSeriesWithAxes_GlobalSeriesIndex(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSingleSeriesWithAxes)instance;
            return that.GlobalSeriesIndex;
        }
        private object get_43_chartTry_intYVal(object instance)
        {
            var that = (global::GuzzlerMobileApp.views.chartTry)instance;
            return that.intYVal;
        }
        private void set_43_chartTry_intYVal(object instance, object Value)
        {
            var that = (global::GuzzlerMobileApp.views.chartTry)instance;
            that.intYVal = (global::System.String)Value;
        }
        private object get_44_chartTry_maxYVal(object instance)
        {
            var that = (global::GuzzlerMobileApp.views.chartTry)instance;
            return that.maxYVal;
        }
        private void set_44_chartTry_maxYVal(object instance, object Value)
        {
            var that = (global::GuzzlerMobileApp.views.chartTry)instance;
            that.maxYVal = (global::System.String)Value;
        }
        private object get_45_chartTry_minYVal(object instance)
        {
            var that = (global::GuzzlerMobileApp.views.chartTry)instance;
            return that.minYVal;
        }
        private void set_45_chartTry_minYVal(object instance, object Value)
        {
            var that = (global::GuzzlerMobileApp.views.chartTry)instance;
            that.minYVal = (global::System.String)Value;
        }
        private object get_46_chartTry_intXVal(object instance)
        {
            var that = (global::GuzzlerMobileApp.views.chartTry)instance;
            return that.intXVal;
        }
        private void set_46_chartTry_intXVal(object instance, object Value)
        {
            var that = (global::GuzzlerMobileApp.views.chartTry)instance;
            that.intXVal = (global::System.String)Value;
        }
        private object get_47_chartTry_maxXVal(object instance)
        {
            var that = (global::GuzzlerMobileApp.views.chartTry)instance;
            return that.maxXVal;
        }
        private void set_47_chartTry_maxXVal(object instance, object Value)
        {
            var that = (global::GuzzlerMobileApp.views.chartTry)instance;
            that.maxXVal = (global::System.String)Value;
        }
        private object get_48_chartTry_minXVal(object instance)
        {
            var that = (global::GuzzlerMobileApp.views.chartTry)instance;
            return that.minXVal;
        }
        private void set_48_chartTry_minXVal(object instance, object Value)
        {
            var that = (global::GuzzlerMobileApp.views.chartTry)instance;
            that.minXVal = (global::System.String)Value;
        }
        private object get_49_chartTry_Data(object instance)
        {
            var that = (global::GuzzlerMobileApp.views.chartTry)instance;
            return that.Data;
        }
        private void set_49_chartTry_Data(object instance, object Value)
        {
            var that = (global::GuzzlerMobileApp.views.chartTry)instance;
            that.Data = (global::System.Collections.Generic.List<global::GuzzlerMobileApp.DataModel.powerDayItem>)Value;
        }
        private object get_50_powerDayItem_Day(object instance)
        {
            var that = (global::GuzzlerMobileApp.DataModel.powerDayItem)instance;
            return that.Day;
        }
        private void set_50_powerDayItem_Day(object instance, object Value)
        {
            var that = (global::GuzzlerMobileApp.DataModel.powerDayItem)instance;
            that.Day = (global::System.Int32)Value;
        }
        private object get_51_powerDayItem_Val(object instance)
        {
            var that = (global::GuzzlerMobileApp.DataModel.powerDayItem)instance;
            return that.Val;
        }
        private void set_51_powerDayItem_Val(object instance, object Value)
        {
            var that = (global::GuzzlerMobileApp.DataModel.powerDayItem)instance;
            that.Val = (global::System.Double)Value;
        }
        private object get_52_chartTry_Data1(object instance)
        {
            var that = (global::GuzzlerMobileApp.views.chartTry)instance;
            return that.Data1;
        }
        private object get_53_chartTry_Data2(object instance)
        {
            var that = (global::GuzzlerMobileApp.views.chartTry)instance;
            return that.Data2;
        }
        private object get_54_Chart_LegendLocation(object instance)
        {
            var that = (global::LiveCharts.Uwp.Charts.Base.Chart)instance;
            return that.LegendLocation;
        }
        private void set_54_Chart_LegendLocation(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Charts.Base.Chart)instance;
            that.LegendLocation = (global::LiveCharts.LegendLocation)Value;
        }
        private object get_55_Chart_Series(object instance)
        {
            var that = (global::LiveCharts.Uwp.Charts.Base.Chart)instance;
            return that.Series;
        }
        private void set_55_Chart_Series(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Charts.Base.Chart)instance;
            that.Series = (global::LiveCharts.SeriesCollection)Value;
        }
        private object get_56_ISeriesView_Model(object instance)
        {
            var that = (global::LiveCharts.Definitions.Series.ISeriesView)instance;
            return that.Model;
        }
        private void set_56_ISeriesView_Model(object instance, object Value)
        {
            var that = (global::LiveCharts.Definitions.Series.ISeriesView)instance;
            that.Model = (global::LiveCharts.SeriesAlgorithm)Value;
        }
        private object get_57_ISeriesView_Values(object instance)
        {
            var that = (global::LiveCharts.Definitions.Series.ISeriesView)instance;
            return that.Values;
        }
        private void set_57_ISeriesView_Values(object instance, object Value)
        {
            var that = (global::LiveCharts.Definitions.Series.ISeriesView)instance;
            that.Values = (global::LiveCharts.IChartValues)Value;
        }
        private object get_58_ISeriesView_DataLabels(object instance)
        {
            var that = (global::LiveCharts.Definitions.Series.ISeriesView)instance;
            return that.DataLabels;
        }
        private object get_59_ISeriesView_ScalesXAt(object instance)
        {
            var that = (global::LiveCharts.Definitions.Series.ISeriesView)instance;
            return that.ScalesXAt;
        }
        private void set_59_ISeriesView_ScalesXAt(object instance, object Value)
        {
            var that = (global::LiveCharts.Definitions.Series.ISeriesView)instance;
            that.ScalesXAt = (global::System.Int32)Value;
        }
        private object get_60_ISeriesView_ScalesYAt(object instance)
        {
            var that = (global::LiveCharts.Definitions.Series.ISeriesView)instance;
            return that.ScalesYAt;
        }
        private void set_60_ISeriesView_ScalesYAt(object instance, object Value)
        {
            var that = (global::LiveCharts.Definitions.Series.ISeriesView)instance;
            that.ScalesYAt = (global::System.Int32)Value;
        }
        private object get_61_ISeriesView_Configuration(object instance)
        {
            var that = (global::LiveCharts.Definitions.Series.ISeriesView)instance;
            return that.Configuration;
        }
        private void set_61_ISeriesView_Configuration(object instance, object Value)
        {
            var that = (global::LiveCharts.Definitions.Series.ISeriesView)instance;
            that.Configuration = (global::System.Object)Value;
        }
        private object get_62_ISeriesView_IsSeriesVisible(object instance)
        {
            var that = (global::LiveCharts.Definitions.Series.ISeriesView)instance;
            return that.IsSeriesVisible;
        }
        private object get_63_ISeriesView_LabelPoint(object instance)
        {
            var that = (global::LiveCharts.Definitions.Series.ISeriesView)instance;
            return that.LabelPoint;
        }
        private void set_63_ISeriesView_LabelPoint(object instance, object Value)
        {
            var that = (global::LiveCharts.Definitions.Series.ISeriesView)instance;
            that.LabelPoint = (global::System.Func<global::LiveCharts.ChartPoint, global::System.String>)Value;
        }
        private object get_64_ISeriesView_ActualValues(object instance)
        {
            var that = (global::LiveCharts.Definitions.Series.ISeriesView)instance;
            return that.ActualValues;
        }
        private object get_65_Chart_AnimationsSpeed(object instance)
        {
            var that = (global::LiveCharts.Uwp.Charts.Base.Chart)instance;
            return that.AnimationsSpeed;
        }
        private void set_65_Chart_AnimationsSpeed(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Charts.Base.Chart)instance;
            that.AnimationsSpeed = (global::System.TimeSpan)Value;
        }
        private object get_66_Chart_Hoverable(object instance)
        {
            var that = (global::LiveCharts.Uwp.Charts.Base.Chart)instance;
            return that.Hoverable;
        }
        private void set_66_Chart_Hoverable(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Charts.Base.Chart)instance;
            that.Hoverable = (global::System.Boolean)Value;
        }
        private object get_67_PieChart_InnerRadius(object instance)
        {
            var that = (global::LiveCharts.Uwp.PieChart)instance;
            return that.InnerRadius;
        }
        private void set_67_PieChart_InnerRadius(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.PieChart)instance;
            that.InnerRadius = (global::System.Double)Value;
        }
        private object get_68_PieChart_StartingRotationAngle(object instance)
        {
            var that = (global::LiveCharts.Uwp.PieChart)instance;
            return that.StartingRotationAngle;
        }
        private void set_68_PieChart_StartingRotationAngle(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.PieChart)instance;
            that.StartingRotationAngle = (global::System.Double)Value;
        }
        private object get_69_PieChart_HoverPushOut(object instance)
        {
            var that = (global::LiveCharts.Uwp.PieChart)instance;
            return that.HoverPushOut;
        }
        private void set_69_PieChart_HoverPushOut(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.PieChart)instance;
            that.HoverPushOut = (global::System.Double)Value;
        }
        private object get_70_Chart_IsMocked(object instance)
        {
            var that = (global::LiveCharts.Uwp.Charts.Base.Chart)instance;
            return that.IsMocked;
        }
        private void set_70_Chart_IsMocked(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Charts.Base.Chart)instance;
            that.IsMocked = (global::System.Boolean)Value;
        }
        private object get_71_Chart_SeriesColors(object instance)
        {
            var that = (global::LiveCharts.Uwp.Charts.Base.Chart)instance;
            return that.SeriesColors;
        }
        private void set_71_Chart_SeriesColors(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Charts.Base.Chart)instance;
            that.SeriesColors = (global::LiveCharts.Uwp.ColorsCollection)Value;
        }
        private object get_72_Color_A(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.A;
        }
        private void set_72_Color_A(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.A = (global::System.Byte)Value;
        }
        private object get_73_Color_B(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.B;
        }
        private void set_73_Color_B(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.B = (global::System.Byte)Value;
        }
        private object get_74_Color_G(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.G;
        }
        private void set_74_Color_G(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.G = (global::System.Byte)Value;
        }
        private object get_75_Color_R(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.R;
        }
        private void set_75_Color_R(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.R = (global::System.Byte)Value;
        }
        private object get_76_Chart_AxisY(object instance)
        {
            var that = (global::LiveCharts.Uwp.Charts.Base.Chart)instance;
            return that.AxisY;
        }
        private void set_76_Chart_AxisY(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Charts.Base.Chart)instance;
            that.AxisY = (global::LiveCharts.Uwp.AxesCollection)Value;
        }
        private object get_77_Axis_Model(object instance)
        {
            var that = (global::LiveCharts.Uwp.Axis)instance;
            return that.Model;
        }
        private void set_77_Axis_Model(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Axis)instance;
            that.Model = (global::LiveCharts.AxisCore)Value;
        }
        private object get_78_Axis_PreviousMaxValue(object instance)
        {
            var that = (global::LiveCharts.Uwp.Axis)instance;
            return that.PreviousMaxValue;
        }
        private object get_79_Axis_PreviousMinValue(object instance)
        {
            var that = (global::LiveCharts.Uwp.Axis)instance;
            return that.PreviousMinValue;
        }
        private object get_80_Axis_Labels(object instance)
        {
            var that = (global::LiveCharts.Uwp.Axis)instance;
            return that.Labels;
        }
        private void set_80_Axis_Labels(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Axis)instance;
            that.Labels = (global::System.Collections.Generic.IList<global::System.String>)Value;
        }
        private object get_81_Axis_Sections(object instance)
        {
            var that = (global::LiveCharts.Uwp.Axis)instance;
            return that.Sections;
        }
        private void set_81_Axis_Sections(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Axis)instance;
            that.Sections = (global::LiveCharts.Uwp.SectionsCollection)Value;
        }
        private object get_82_AxisSection_Model(object instance)
        {
            var that = (global::LiveCharts.Uwp.AxisSection)instance;
            return that.Model;
        }
        private void set_82_AxisSection_Model(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.AxisSection)instance;
            that.Model = (global::LiveCharts.AxisSectionCore)Value;
        }
        private object get_83_AxisSection_Label(object instance)
        {
            var that = (global::LiveCharts.Uwp.AxisSection)instance;
            return that.Label;
        }
        private void set_83_AxisSection_Label(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.AxisSection)instance;
            that.Label = (global::System.String)Value;
        }
        private object get_84_AxisSection_Value(object instance)
        {
            var that = (global::LiveCharts.Uwp.AxisSection)instance;
            return that.Value;
        }
        private void set_84_AxisSection_Value(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.AxisSection)instance;
            that.Value = (global::System.Double)Value;
        }
        private object get_85_AxisSection_SectionWidth(object instance)
        {
            var that = (global::LiveCharts.Uwp.AxisSection)instance;
            return that.SectionWidth;
        }
        private void set_85_AxisSection_SectionWidth(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.AxisSection)instance;
            that.SectionWidth = (global::System.Double)Value;
        }
        private object get_86_AxisSection_Draggable(object instance)
        {
            var that = (global::LiveCharts.Uwp.AxisSection)instance;
            return that.Draggable;
        }
        private void set_86_AxisSection_Draggable(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.AxisSection)instance;
            that.Draggable = (global::System.Boolean)Value;
        }
        private object get_87_AxisSection_Stroke(object instance)
        {
            var that = (global::LiveCharts.Uwp.AxisSection)instance;
            return that.Stroke;
        }
        private void set_87_AxisSection_Stroke(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.AxisSection)instance;
            that.Stroke = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_88_AxisSection_Fill(object instance)
        {
            var that = (global::LiveCharts.Uwp.AxisSection)instance;
            return that.Fill;
        }
        private void set_88_AxisSection_Fill(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.AxisSection)instance;
            that.Fill = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_89_AxisSection_StrokeThickness(object instance)
        {
            var that = (global::LiveCharts.Uwp.AxisSection)instance;
            return that.StrokeThickness;
        }
        private void set_89_AxisSection_StrokeThickness(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.AxisSection)instance;
            that.StrokeThickness = (global::System.Double)Value;
        }
        private object get_90_AxisSection_StrokeDashArray(object instance)
        {
            var that = (global::LiveCharts.Uwp.AxisSection)instance;
            return that.StrokeDashArray;
        }
        private void set_90_AxisSection_StrokeDashArray(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.AxisSection)instance;
            that.StrokeDashArray = (global::Windows.UI.Xaml.Media.DoubleCollection)Value;
        }
        private object get_91_Axis_LabelFormatter(object instance)
        {
            var that = (global::LiveCharts.Uwp.Axis)instance;
            return that.LabelFormatter;
        }
        private void set_91_Axis_LabelFormatter(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Axis)instance;
            that.LabelFormatter = (global::System.Func<global::System.Double, global::System.String>)Value;
        }
        private object get_92_Axis_Separator(object instance)
        {
            var that = (global::LiveCharts.Uwp.Axis)instance;
            return that.Separator;
        }
        private void set_92_Axis_Separator(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Axis)instance;
            that.Separator = (global::LiveCharts.Definitions.Charts.ISeparatorView)Value;
        }
        private object get_93_Axis_ShowLabels(object instance)
        {
            var that = (global::LiveCharts.Uwp.Axis)instance;
            return that.ShowLabels;
        }
        private void set_93_Axis_ShowLabels(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Axis)instance;
            that.ShowLabels = (global::System.Boolean)Value;
        }
        private object get_94_Axis_MaxValue(object instance)
        {
            var that = (global::LiveCharts.Uwp.Axis)instance;
            return that.MaxValue;
        }
        private void set_94_Axis_MaxValue(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Axis)instance;
            that.MaxValue = (global::System.Double)Value;
        }
        private object get_95_Axis_MinValue(object instance)
        {
            var that = (global::LiveCharts.Uwp.Axis)instance;
            return that.MinValue;
        }
        private void set_95_Axis_MinValue(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Axis)instance;
            that.MinValue = (global::System.Double)Value;
        }
        private object get_96_Axis_MinRange(object instance)
        {
            var that = (global::LiveCharts.Uwp.Axis)instance;
            return that.MinRange;
        }
        private void set_96_Axis_MinRange(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Axis)instance;
            that.MinRange = (global::System.Double)Value;
        }
        private object get_97_Axis_MaxRange(object instance)
        {
            var that = (global::LiveCharts.Uwp.Axis)instance;
            return that.MaxRange;
        }
        private void set_97_Axis_MaxRange(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Axis)instance;
            that.MaxRange = (global::System.Double)Value;
        }
        private object get_98_Axis_Title(object instance)
        {
            var that = (global::LiveCharts.Uwp.Axis)instance;
            return that.Title;
        }
        private void set_98_Axis_Title(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Axis)instance;
            that.Title = (global::System.String)Value;
        }
        private object get_99_Axis_Position(object instance)
        {
            var that = (global::LiveCharts.Uwp.Axis)instance;
            return that.Position;
        }
        private void set_99_Axis_Position(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Axis)instance;
            that.Position = (global::LiveCharts.AxisPosition)Value;
        }
        private object get_100_Axis_IsMerged(object instance)
        {
            var that = (global::LiveCharts.Uwp.Axis)instance;
            return that.IsMerged;
        }
        private void set_100_Axis_IsMerged(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Axis)instance;
            that.IsMerged = (global::System.Boolean)Value;
        }
        private object get_101_Axis_BarUnit(object instance)
        {
            var that = (global::LiveCharts.Uwp.Axis)instance;
            return that.BarUnit;
        }
        private void set_101_Axis_BarUnit(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Axis)instance;
            that.BarUnit = (global::System.Double)Value;
        }
        private object get_102_Axis_DisableAnimations(object instance)
        {
            var that = (global::LiveCharts.Uwp.Axis)instance;
            return that.DisableAnimations;
        }
        private void set_102_Axis_DisableAnimations(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Axis)instance;
            that.DisableAnimations = (global::System.Boolean)Value;
        }
        private object get_103_Axis_FontFamily(object instance)
        {
            var that = (global::LiveCharts.Uwp.Axis)instance;
            return that.FontFamily;
        }
        private void set_103_Axis_FontFamily(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Axis)instance;
            that.FontFamily = (global::Windows.UI.Xaml.Media.FontFamily)Value;
        }
        private object get_104_Axis_FontSize(object instance)
        {
            var that = (global::LiveCharts.Uwp.Axis)instance;
            return that.FontSize;
        }
        private void set_104_Axis_FontSize(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Axis)instance;
            that.FontSize = (global::System.Double)Value;
        }
        private object get_105_Axis_FontWeight(object instance)
        {
            var that = (global::LiveCharts.Uwp.Axis)instance;
            return that.FontWeight;
        }
        private void set_105_Axis_FontWeight(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Axis)instance;
            that.FontWeight = (global::Windows.UI.Text.FontWeight)Value;
        }
        private object get_106_Axis_FontStyle(object instance)
        {
            var that = (global::LiveCharts.Uwp.Axis)instance;
            return that.FontStyle;
        }
        private void set_106_Axis_FontStyle(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Axis)instance;
            that.FontStyle = (global::Windows.UI.Text.FontStyle)Value;
        }
        private object get_107_Axis_FontStretch(object instance)
        {
            var that = (global::LiveCharts.Uwp.Axis)instance;
            return that.FontStretch;
        }
        private void set_107_Axis_FontStretch(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Axis)instance;
            that.FontStretch = (global::Windows.UI.Text.FontStretch)Value;
        }
        private object get_108_Axis_Foreground(object instance)
        {
            var that = (global::LiveCharts.Uwp.Axis)instance;
            return that.Foreground;
        }
        private void set_108_Axis_Foreground(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Axis)instance;
            that.Foreground = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_109_Axis_LabelsRotation(object instance)
        {
            var that = (global::LiveCharts.Uwp.Axis)instance;
            return that.LabelsRotation;
        }
        private void set_109_Axis_LabelsRotation(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Axis)instance;
            that.LabelsRotation = (global::System.Double)Value;
        }
        private object get_110_Axis_IsEnabled(object instance)
        {
            var that = (global::LiveCharts.Uwp.Axis)instance;
            return that.IsEnabled;
        }
        private void set_110_Axis_IsEnabled(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Axis)instance;
            that.IsEnabled = (global::System.Boolean)Value;
        }
        private object get_111_Axis_AxisOrientation(object instance)
        {
            var that = (global::LiveCharts.Uwp.Axis)instance;
            return that.AxisOrientation;
        }
        private object get_112_Chart_AxisX(object instance)
        {
            var that = (global::LiveCharts.Uwp.Charts.Base.Chart)instance;
            return that.AxisX;
        }
        private void set_112_Chart_AxisX(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Charts.Base.Chart)instance;
            that.AxisX = (global::LiveCharts.Uwp.AxesCollection)Value;
        }
        private object get_113_Chart_ChartLegend(object instance)
        {
            var that = (global::LiveCharts.Uwp.Charts.Base.Chart)instance;
            return that.ChartLegend;
        }
        private void set_113_Chart_ChartLegend(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Charts.Base.Chart)instance;
            that.ChartLegend = (global::Windows.UI.Xaml.Controls.UserControl)Value;
        }
        private object get_114_Chart_Zoom(object instance)
        {
            var that = (global::LiveCharts.Uwp.Charts.Base.Chart)instance;
            return that.Zoom;
        }
        private void set_114_Chart_Zoom(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Charts.Base.Chart)instance;
            that.Zoom = (global::LiveCharts.ZoomingOptions)Value;
        }
        private object get_115_Chart_DisableAnimations(object instance)
        {
            var that = (global::LiveCharts.Uwp.Charts.Base.Chart)instance;
            return that.DisableAnimations;
        }
        private void set_115_Chart_DisableAnimations(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Charts.Base.Chart)instance;
            that.DisableAnimations = (global::System.Boolean)Value;
        }
        private object get_116_Chart_DataTooltip(object instance)
        {
            var that = (global::LiveCharts.Uwp.Charts.Base.Chart)instance;
            return that.DataTooltip;
        }
        private void set_116_Chart_DataTooltip(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Charts.Base.Chart)instance;
            that.DataTooltip = (global::Windows.UI.Xaml.Controls.UserControl)Value;
        }
        private object get_117_Chart_ScrollMode(object instance)
        {
            var that = (global::LiveCharts.Uwp.Charts.Base.Chart)instance;
            return that.ScrollMode;
        }
        private void set_117_Chart_ScrollMode(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Charts.Base.Chart)instance;
            that.ScrollMode = (global::LiveCharts.ScrollMode)Value;
        }
        private object get_118_Chart_ScrollHorizontalFrom(object instance)
        {
            var that = (global::LiveCharts.Uwp.Charts.Base.Chart)instance;
            return that.ScrollHorizontalFrom;
        }
        private void set_118_Chart_ScrollHorizontalFrom(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Charts.Base.Chart)instance;
            that.ScrollHorizontalFrom = (global::System.Double)Value;
        }
        private object get_119_Chart_ScrollHorizontalTo(object instance)
        {
            var that = (global::LiveCharts.Uwp.Charts.Base.Chart)instance;
            return that.ScrollHorizontalTo;
        }
        private void set_119_Chart_ScrollHorizontalTo(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Charts.Base.Chart)instance;
            that.ScrollHorizontalTo = (global::System.Double)Value;
        }
        private object get_120_Chart_ScrollVerticalFrom(object instance)
        {
            var that = (global::LiveCharts.Uwp.Charts.Base.Chart)instance;
            return that.ScrollVerticalFrom;
        }
        private void set_120_Chart_ScrollVerticalFrom(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Charts.Base.Chart)instance;
            that.ScrollVerticalFrom = (global::System.Double)Value;
        }
        private object get_121_Chart_ScrollVerticalTo(object instance)
        {
            var that = (global::LiveCharts.Uwp.Charts.Base.Chart)instance;
            return that.ScrollVerticalTo;
        }
        private void set_121_Chart_ScrollVerticalTo(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Charts.Base.Chart)instance;
            that.ScrollVerticalTo = (global::System.Double)Value;
        }
        private object get_122_Chart_ScrollBarFill(object instance)
        {
            var that = (global::LiveCharts.Uwp.Charts.Base.Chart)instance;
            return that.ScrollBarFill;
        }
        private void set_122_Chart_ScrollBarFill(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Charts.Base.Chart)instance;
            that.ScrollBarFill = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_123_Chart_ZoomingSpeed(object instance)
        {
            var that = (global::LiveCharts.Uwp.Charts.Base.Chart)instance;
            return that.ZoomingSpeed;
        }
        private void set_123_Chart_ZoomingSpeed(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Charts.Base.Chart)instance;
            that.ZoomingSpeed = (global::System.Double)Value;
        }
        private object get_124_Chart_UpdaterState(object instance)
        {
            var that = (global::LiveCharts.Uwp.Charts.Base.Chart)instance;
            return that.UpdaterState;
        }
        private void set_124_Chart_UpdaterState(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Charts.Base.Chart)instance;
            that.UpdaterState = (global::LiveCharts.UpdaterState)Value;
        }
        private object get_125_Chart_Model(object instance)
        {
            var that = (global::LiveCharts.Uwp.Charts.Base.Chart)instance;
            return that.Model;
        }
        private object get_126_Chart_HasTooltip(object instance)
        {
            var that = (global::LiveCharts.Uwp.Charts.Base.Chart)instance;
            return that.HasTooltip;
        }
        private object get_127_Chart_HasDataClickEventAttached(object instance)
        {
            var that = (global::LiveCharts.Uwp.Charts.Base.Chart)instance;
            return that.HasDataClickEventAttached;
        }
        private object get_128_Chart_IsControlLoaded(object instance)
        {
            var that = (global::LiveCharts.Uwp.Charts.Base.Chart)instance;
            return that.IsControlLoaded;
        }
        private object get_129_Chart_IsInDesignMode(object instance)
        {
            var that = (global::LiveCharts.Uwp.Charts.Base.Chart)instance;
            return that.IsInDesignMode;
        }
        private object get_130_Chart_ActualSeries(object instance)
        {
            var that = (global::LiveCharts.Uwp.Charts.Base.Chart)instance;
            return that.ActualSeries;
        }
        private object get_131_Chart_TooltipTimeout(object instance)
        {
            var that = (global::LiveCharts.Uwp.Charts.Base.Chart)instance;
            return that.TooltipTimeout;
        }
        private void set_131_Chart_TooltipTimeout(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Charts.Base.Chart)instance;
            that.TooltipTimeout = (global::System.TimeSpan)Value;
        }
        private object get_132_dailyColumn_DevName(object instance)
        {
            var that = (global::GuzzlerMobileApp.views.dailyColumn)instance;
            return that.DevName;
        }
        private object get_133_dailyColumn_powerPerHour(object instance)
        {
            var that = (global::GuzzlerMobileApp.views.dailyColumn)instance;
            return that.powerPerHour;
        }
        private object get_134_dailyColumn_DevGuzzeled(object instance)
        {
            var that = (global::GuzzlerMobileApp.views.dailyColumn)instance;
            return that.DevGuzzeled;
        }
        private object get_135_CartesianChart_VisualElements(object instance)
        {
            var that = (global::LiveCharts.Uwp.CartesianChart)instance;
            return that.VisualElements;
        }
        private void set_135_CartesianChart_VisualElements(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.CartesianChart)instance;
            that.VisualElements = (global::LiveCharts.VisualElementsCollection)Value;
        }
        private object get_136_ICartesianVisualElement_X(object instance)
        {
            var that = (global::LiveCharts.Definitions.Charts.ICartesianVisualElement)instance;
            return that.X;
        }
        private void set_136_ICartesianVisualElement_X(object instance, object Value)
        {
            var that = (global::LiveCharts.Definitions.Charts.ICartesianVisualElement)instance;
            that.X = (global::System.Double)Value;
        }
        private object get_137_ICartesianVisualElement_Y(object instance)
        {
            var that = (global::LiveCharts.Definitions.Charts.ICartesianVisualElement)instance;
            return that.Y;
        }
        private void set_137_ICartesianVisualElement_Y(object instance, object Value)
        {
            var that = (global::LiveCharts.Definitions.Charts.ICartesianVisualElement)instance;
            that.Y = (global::System.Double)Value;
        }
        private object get_138_ICartesianVisualElement_AxisX(object instance)
        {
            var that = (global::LiveCharts.Definitions.Charts.ICartesianVisualElement)instance;
            return that.AxisX;
        }
        private void set_138_ICartesianVisualElement_AxisX(object instance, object Value)
        {
            var that = (global::LiveCharts.Definitions.Charts.ICartesianVisualElement)instance;
            that.AxisX = (global::System.Int32)Value;
        }
        private object get_139_ICartesianVisualElement_AxisY(object instance)
        {
            var that = (global::LiveCharts.Definitions.Charts.ICartesianVisualElement)instance;
            return that.AxisY;
        }
        private void set_139_ICartesianVisualElement_AxisY(object instance, object Value)
        {
            var that = (global::LiveCharts.Definitions.Charts.ICartesianVisualElement)instance;
            that.AxisY = (global::System.Int32)Value;
        }
        private object get_140_dailyLog_DevName(object instance)
        {
            var that = (global::GuzzlerMobileApp.views.dailyLog)instance;
            return that.DevName;
        }
        private object get_141_dailyLog_Date(object instance)
        {
            var that = (global::GuzzlerMobileApp.views.dailyLog)instance;
            return that.Date;
        }
        private object get_142_dailyLog_maxTimeVal(object instance)
        {
            var that = (global::GuzzlerMobileApp.views.dailyLog)instance;
            return that.maxTimeVal;
        }
        private void set_142_dailyLog_maxTimeVal(object instance, object Value)
        {
            var that = (global::GuzzlerMobileApp.views.dailyLog)instance;
            that.maxTimeVal = (global::System.DateTime)Value;
        }
        private object get_143_dailyLog_minTimeVal(object instance)
        {
            var that = (global::GuzzlerMobileApp.views.dailyLog)instance;
            return that.minTimeVal;
        }
        private void set_143_dailyLog_minTimeVal(object instance, object Value)
        {
            var that = (global::GuzzlerMobileApp.views.dailyLog)instance;
            that.minTimeVal = (global::System.DateTime)Value;
        }
        private object get_144_dailyLog_Formatter(object instance)
        {
            var that = (global::GuzzlerMobileApp.views.dailyLog)instance;
            return that.Formatter;
        }
        private void set_144_dailyLog_Formatter(object instance, object Value)
        {
            var that = (global::GuzzlerMobileApp.views.dailyLog)instance;
            that.Formatter = (global::System.Func<global::System.Double, global::System.String>)Value;
        }
        private object get_145_dailyLog_Series(object instance)
        {
            var that = (global::GuzzlerMobileApp.views.dailyLog)instance;
            return that.Series;
        }
        private void set_145_dailyLog_Series(object instance, object Value)
        {
            var that = (global::GuzzlerMobileApp.views.dailyLog)instance;
            that.Series = (global::LiveCharts.SeriesCollection)Value;
        }
        private object get_146_dailyLog_Labels(object instance)
        {
            var that = (global::GuzzlerMobileApp.views.dailyLog)instance;
            return that.Labels;
        }
        private void set_146_dailyLog_Labels(object instance, object Value)
        {
            var that = (global::GuzzlerMobileApp.views.dailyLog)instance;
            that.Labels = (global::System.String[])Value;
        }
        private object get_147_dailyPie_DevName(object instance)
        {
            var that = (global::GuzzlerMobileApp.views.dailyPie)instance;
            return that.DevName;
        }
        private object get_148_dailyPie_powerPartition(object instance)
        {
            var that = (global::GuzzlerMobileApp.views.dailyPie)instance;
            return that.powerPartition;
        }
        private object get_149_piePowerItem_Dev(object instance)
        {
            var that = (global::GuzzlerMobileApp.DataModel.piePowerItem)instance;
            return that.Dev;
        }
        private void set_149_piePowerItem_Dev(object instance, object Value)
        {
            var that = (global::GuzzlerMobileApp.DataModel.piePowerItem)instance;
            that.Dev = (global::System.String)Value;
        }
        private object get_150_piePowerItem_Val(object instance)
        {
            var that = (global::GuzzlerMobileApp.DataModel.piePowerItem)instance;
            return that.Val;
        }
        private void set_150_piePowerItem_Val(object instance, object Value)
        {
            var that = (global::GuzzlerMobileApp.DataModel.piePowerItem)instance;
            that.Val = (global::System.Double)Value;
        }
        private object get_151_dailyPie_DevGuzzeled(object instance)
        {
            var that = (global::GuzzlerMobileApp.views.dailyPie)instance;
            return that.DevGuzzeled;
        }
        private object get_152_dailyPie_PointLabel(object instance)
        {
            var that = (global::GuzzlerMobileApp.views.dailyPie)instance;
            return that.PointLabel;
        }
        private void set_152_dailyPie_PointLabel(object instance, object Value)
        {
            var that = (global::GuzzlerMobileApp.views.dailyPie)instance;
            that.PointLabel = (global::System.Func<global::LiveCharts.ChartPoint, global::System.String>)Value;
        }
        private object get_153_dailyPie_Series(object instance)
        {
            var that = (global::GuzzlerMobileApp.views.dailyPie)instance;
            return that.Series;
        }
        private void set_153_dailyPie_Series(object instance, object Value)
        {
            var that = (global::GuzzlerMobileApp.views.dailyPie)instance;
            that.Series = (global::LiveCharts.SeriesCollection)Value;
        }
        private object get_154_deviceDetails_DevName(object instance)
        {
            var that = (global::GuzzlerMobileApp.views.deviceDetails)instance;
            return that.DevName;
        }
        private void set_154_deviceDetails_DevName(object instance, object Value)
        {
            var that = (global::GuzzlerMobileApp.views.deviceDetails)instance;
            that.DevName = (global::System.String)Value;
        }
        private object get_155_deviceDetails_Manufacturer(object instance)
        {
            var that = (global::GuzzlerMobileApp.views.deviceDetails)instance;
            return that.Manufacturer;
        }
        private void set_155_deviceDetails_Manufacturer(object instance, object Value)
        {
            var that = (global::GuzzlerMobileApp.views.deviceDetails)instance;
            that.Manufacturer = (global::System.String)Value;
        }
        private object get_156_deviceDetails_GuzzlerId(object instance)
        {
            var that = (global::GuzzlerMobileApp.views.deviceDetails)instance;
            return that.GuzzlerId;
        }
        private void set_156_deviceDetails_GuzzlerId(object instance, object Value)
        {
            var that = (global::GuzzlerMobileApp.views.deviceDetails)instance;
            that.GuzzlerId = (global::System.String)Value;
        }
        private object get_157_deviceDetails_DevType(object instance)
        {
            var that = (global::GuzzlerMobileApp.views.deviceDetails)instance;
            return that.DevType;
        }
        private void set_157_deviceDetails_DevType(object instance, object Value)
        {
            var that = (global::GuzzlerMobileApp.views.deviceDetails)instance;
            that.DevType = (global::System.String)Value;
        }
        private object get_158_deviceDetails_Model(object instance)
        {
            var that = (global::GuzzlerMobileApp.views.deviceDetails)instance;
            return that.Model;
        }
        private void set_158_deviceDetails_Model(object instance, object Value)
        {
            var that = (global::GuzzlerMobileApp.views.deviceDetails)instance;
            that.Model = (global::System.String)Value;
        }
        private object get_159_deviceDetails_Serial(object instance)
        {
            var that = (global::GuzzlerMobileApp.views.deviceDetails)instance;
            return that.Serial;
        }
        private void set_159_deviceDetails_Serial(object instance, object Value)
        {
            var that = (global::GuzzlerMobileApp.views.deviceDetails)instance;
            that.Serial = (global::System.String)Value;
        }
        private object get_160_deviceDetails_TimeCreated(object instance)
        {
            var that = (global::GuzzlerMobileApp.views.deviceDetails)instance;
            return that.TimeCreated;
        }
        private void set_160_deviceDetails_TimeCreated(object instance, object Value)
        {
            var that = (global::GuzzlerMobileApp.views.deviceDetails)instance;
            that.TimeCreated = (global::System.String)Value;
        }
        private object get_161_devices_IsNextEnabled(object instance)
        {
            var that = (global::GuzzlerMobileApp.views.devices)instance;
            return that.IsNextEnabled;
        }
        private void set_161_devices_IsNextEnabled(object instance, object Value)
        {
            var that = (global::GuzzlerMobileApp.views.devices)instance;
            that.IsNextEnabled = (global::System.Boolean)Value;
        }
        private object get_162_devices_ChosenDev(object instance)
        {
            var that = (global::GuzzlerMobileApp.views.devices)instance;
            return that.ChosenDev;
        }
        private void set_162_devices_ChosenDev(object instance, object Value)
        {
            var that = (global::GuzzlerMobileApp.views.devices)instance;
            that.ChosenDev = (global::System.String)Value;
        }
        private object get_163_devices_DevToRemove(object instance)
        {
            var that = (global::GuzzlerMobileApp.views.devices)instance;
            return that.DevToRemove;
        }
        private void set_163_devices_DevToRemove(object instance, object Value)
        {
            var that = (global::GuzzlerMobileApp.views.devices)instance;
            that.DevToRemove = (global::System.String)Value;
        }
        private object get_164_ColumnBarBaseSeries_DependentRangeAxis(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.ColumnBarBaseSeries<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.ColumnDataPoint>)instance;
            return that.DependentRangeAxis;
        }
        private void set_164_ColumnBarBaseSeries_DependentRangeAxis(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.ColumnBarBaseSeries<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.ColumnDataPoint>)instance;
            that.DependentRangeAxis = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IRangeAxis)Value;
        }
        private object get_165_ColumnBarBaseSeries_IndependentAxis(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.ColumnBarBaseSeries<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.ColumnDataPoint>)instance;
            return that.IndependentAxis;
        }
        private void set_165_ColumnBarBaseSeries_IndependentAxis(object instance, object Value)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.ColumnBarBaseSeries<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.ColumnDataPoint>)instance;
            that.IndependentAxis = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis)Value;
        }
        private object get_166_ColumnBarBaseSeries_ActualDependentRangeAxis(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.ColumnBarBaseSeries<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.ColumnDataPoint>)instance;
            return that.ActualDependentRangeAxis;
        }
        private object get_167_ColumnBarBaseSeries_ActualIndependentAxis(object instance)
        {
            var that = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.ColumnBarBaseSeries<global::WinRTXamlToolkit.Controls.DataVisualization.Charting.ColumnDataPoint>)instance;
            return that.ActualIndependentAxis;
        }
        private object get_168_estimatedCost_DevName(object instance)
        {
            var that = (global::GuzzlerMobileApp.views.estimatedCost)instance;
            return that.DevName;
        }
        private object get_169_estimatedCost_Tariff(object instance)
        {
            var that = (global::GuzzlerMobileApp.views.estimatedCost)instance;
            return that.Tariff;
        }
        private object get_170_historyLog_DevName(object instance)
        {
            var that = (global::GuzzlerMobileApp.views.historyLog)instance;
            return that.DevName;
        }
        private object get_171_message_Result(object instance)
        {
            var that = (global::GuzzlerMobileApp.views.message)instance;
            return that.Result;
        }
        private void set_171_message_Result(object instance, object Value)
        {
            var that = (global::GuzzlerMobileApp.views.message)instance;
            that.Result = (global::GuzzlerMobileApp.views.MyResult)Value;
        }
        private object get_172_message_mTitle(object instance)
        {
            var that = (global::GuzzlerMobileApp.views.message)instance;
            return that.mTitle;
        }
        private void set_172_message_mTitle(object instance, object Value)
        {
            var that = (global::GuzzlerMobileApp.views.message)instance;
            that.mTitle = (global::System.String)Value;
        }
        private object get_173_message_Msg(object instance)
        {
            var that = (global::GuzzlerMobileApp.views.message)instance;
            return that.Msg;
        }
        private void set_173_message_Msg(object instance, object Value)
        {
            var that = (global::GuzzlerMobileApp.views.message)instance;
            that.Msg = (global::System.String)Value;
        }
        private object get_174_PointShapeLineExample_SeriesCollection(object instance)
        {
            var that = (global::GuzzlerMobileApp.views.PointShapeLineExample)instance;
            return that.SeriesCollection;
        }
        private void set_174_PointShapeLineExample_SeriesCollection(object instance, object Value)
        {
            var that = (global::GuzzlerMobileApp.views.PointShapeLineExample)instance;
            that.SeriesCollection = (global::LiveCharts.SeriesCollection)Value;
        }
        private object get_175_PointShapeLineExample_Labels(object instance)
        {
            var that = (global::GuzzlerMobileApp.views.PointShapeLineExample)instance;
            return that.Labels;
        }
        private void set_175_PointShapeLineExample_Labels(object instance, object Value)
        {
            var that = (global::GuzzlerMobileApp.views.PointShapeLineExample)instance;
            that.Labels = (global::System.String[])Value;
        }
        private object get_176_PointShapeLineExample_YFormatter(object instance)
        {
            var that = (global::GuzzlerMobileApp.views.PointShapeLineExample)instance;
            return that.YFormatter;
        }
        private void set_176_PointShapeLineExample_YFormatter(object instance, object Value)
        {
            var that = (global::GuzzlerMobileApp.views.PointShapeLineExample)instance;
            that.YFormatter = (global::System.Func<global::System.Double, global::System.String>)Value;
        }
        private object get_177_Series_Values(object instance)
        {
            var that = (global::LiveCharts.Uwp.Series)instance;
            return that.Values;
        }
        private void set_177_Series_Values(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Series)instance;
            that.Values = (global::LiveCharts.IChartValues)Value;
        }
        private object get_178_LineSeries_PointGeometrySize(object instance)
        {
            var that = (global::LiveCharts.Uwp.LineSeries)instance;
            return that.PointGeometrySize;
        }
        private void set_178_LineSeries_PointGeometrySize(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.LineSeries)instance;
            that.PointGeometrySize = (global::System.Double)Value;
        }
        private object get_179_Series_StrokeThickness(object instance)
        {
            var that = (global::LiveCharts.Uwp.Series)instance;
            return that.StrokeThickness;
        }
        private void set_179_Series_StrokeThickness(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Series)instance;
            that.StrokeThickness = (global::System.Double)Value;
        }
        private object get_180_LineSeries_PointForeround(object instance)
        {
            var that = (global::LiveCharts.Uwp.LineSeries)instance;
            return that.PointForeround;
        }
        private void set_180_LineSeries_PointForeround(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.LineSeries)instance;
            that.PointForeround = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_181_LineSeries_LineSmoothness(object instance)
        {
            var that = (global::LiveCharts.Uwp.LineSeries)instance;
            return that.LineSmoothness;
        }
        private void set_181_LineSeries_LineSmoothness(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.LineSeries)instance;
            that.LineSmoothness = (global::System.Double)Value;
        }
        private object get_182_LineSeries_AreaLimit(object instance)
        {
            var that = (global::LiveCharts.Uwp.LineSeries)instance;
            return that.AreaLimit;
        }
        private void set_182_LineSeries_AreaLimit(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.LineSeries)instance;
            that.AreaLimit = (global::System.Double)Value;
        }
        private object get_183_Series_Model(object instance)
        {
            var that = (global::LiveCharts.Uwp.Series)instance;
            return that.Model;
        }
        private void set_183_Series_Model(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Series)instance;
            that.Model = (global::LiveCharts.SeriesAlgorithm)Value;
        }
        private object get_184_Series_ActualValues(object instance)
        {
            var that = (global::LiveCharts.Uwp.Series)instance;
            return that.ActualValues;
        }
        private object get_185_Series_IsSeriesVisible(object instance)
        {
            var that = (global::LiveCharts.Uwp.Series)instance;
            return that.IsSeriesVisible;
        }
        private object get_186_Series_ChartPoints(object instance)
        {
            var that = (global::LiveCharts.Uwp.Series)instance;
            return that.ChartPoints;
        }
        private object get_187_Series_Title(object instance)
        {
            var that = (global::LiveCharts.Uwp.Series)instance;
            return that.Title;
        }
        private void set_187_Series_Title(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Series)instance;
            that.Title = (global::System.String)Value;
        }
        private object get_188_Series_Stroke(object instance)
        {
            var that = (global::LiveCharts.Uwp.Series)instance;
            return that.Stroke;
        }
        private void set_188_Series_Stroke(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Series)instance;
            that.Stroke = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_189_Series_Fill(object instance)
        {
            var that = (global::LiveCharts.Uwp.Series)instance;
            return that.Fill;
        }
        private void set_189_Series_Fill(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Series)instance;
            that.Fill = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_190_Series_DataLabels(object instance)
        {
            var that = (global::LiveCharts.Uwp.Series)instance;
            return that.DataLabels;
        }
        private void set_190_Series_DataLabels(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Series)instance;
            that.DataLabels = (global::System.Boolean)Value;
        }
        private object get_191_Series_FontFamily(object instance)
        {
            var that = (global::LiveCharts.Uwp.Series)instance;
            return that.FontFamily;
        }
        private void set_191_Series_FontFamily(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Series)instance;
            that.FontFamily = (global::Windows.UI.Xaml.Media.FontFamily)Value;
        }
        private object get_192_Series_FontSize(object instance)
        {
            var that = (global::LiveCharts.Uwp.Series)instance;
            return that.FontSize;
        }
        private void set_192_Series_FontSize(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Series)instance;
            that.FontSize = (global::System.Double)Value;
        }
        private object get_193_Series_FontWeight(object instance)
        {
            var that = (global::LiveCharts.Uwp.Series)instance;
            return that.FontWeight;
        }
        private void set_193_Series_FontWeight(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Series)instance;
            that.FontWeight = (global::Windows.UI.Text.FontWeight)Value;
        }
        private object get_194_Series_FontStyle(object instance)
        {
            var that = (global::LiveCharts.Uwp.Series)instance;
            return that.FontStyle;
        }
        private void set_194_Series_FontStyle(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Series)instance;
            that.FontStyle = (global::Windows.UI.Text.FontStyle)Value;
        }
        private object get_195_Series_FontStretch(object instance)
        {
            var that = (global::LiveCharts.Uwp.Series)instance;
            return that.FontStretch;
        }
        private void set_195_Series_FontStretch(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Series)instance;
            that.FontStretch = (global::Windows.UI.Text.FontStretch)Value;
        }
        private object get_196_Series_Foreground(object instance)
        {
            var that = (global::LiveCharts.Uwp.Series)instance;
            return that.Foreground;
        }
        private void set_196_Series_Foreground(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Series)instance;
            that.Foreground = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_197_Series_StrokeDashArray(object instance)
        {
            var that = (global::LiveCharts.Uwp.Series)instance;
            return that.StrokeDashArray;
        }
        private void set_197_Series_StrokeDashArray(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Series)instance;
            that.StrokeDashArray = (global::Windows.UI.Xaml.Media.DoubleCollection)Value;
        }
        private object get_198_Series_PointGeometry(object instance)
        {
            var that = (global::LiveCharts.Uwp.Series)instance;
            return that.PointGeometry;
        }
        private void set_198_Series_PointGeometry(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Series)instance;
            that.PointGeometry = (global::LiveCharts.Uwp.PointGeometry)Value;
        }
        private object get_199_Series_ScalesXAt(object instance)
        {
            var that = (global::LiveCharts.Uwp.Series)instance;
            return that.ScalesXAt;
        }
        private void set_199_Series_ScalesXAt(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Series)instance;
            that.ScalesXAt = (global::System.Int32)Value;
        }
        private object get_200_Series_ScalesYAt(object instance)
        {
            var that = (global::LiveCharts.Uwp.Series)instance;
            return that.ScalesYAt;
        }
        private void set_200_Series_ScalesYAt(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Series)instance;
            that.ScalesYAt = (global::System.Int32)Value;
        }
        private object get_201_Series_LabelPoint(object instance)
        {
            var that = (global::LiveCharts.Uwp.Series)instance;
            return that.LabelPoint;
        }
        private void set_201_Series_LabelPoint(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Series)instance;
            that.LabelPoint = (global::System.Func<global::LiveCharts.ChartPoint, global::System.String>)Value;
        }
        private object get_202_Series_Configuration(object instance)
        {
            var that = (global::LiveCharts.Uwp.Series)instance;
            return that.Configuration;
        }
        private void set_202_Series_Configuration(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Series)instance;
            that.Configuration = (global::System.Object)Value;
        }
        private object get_203_Separator_Step(object instance)
        {
            var that = (global::LiveCharts.Uwp.Separator)instance;
            return that.Step;
        }
        private void set_203_Separator_Step(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Separator)instance;
            that.Step = (global::System.Double)Value;
        }
        private object get_204_Separator_Chart(object instance)
        {
            var that = (global::LiveCharts.Uwp.Separator)instance;
            return that.Chart;
        }
        private void set_204_Separator_Chart(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Separator)instance;
            that.Chart = (global::LiveCharts.Charts.ChartCore)Value;
        }
        private object get_205_Separator_Stroke(object instance)
        {
            var that = (global::LiveCharts.Uwp.Separator)instance;
            return that.Stroke;
        }
        private void set_205_Separator_Stroke(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Separator)instance;
            that.Stroke = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_206_Separator_StrokeThickness(object instance)
        {
            var that = (global::LiveCharts.Uwp.Separator)instance;
            return that.StrokeThickness;
        }
        private void set_206_Separator_StrokeThickness(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Separator)instance;
            that.StrokeThickness = (global::System.Double)Value;
        }
        private object get_207_Separator_StrokeDashArray(object instance)
        {
            var that = (global::LiveCharts.Uwp.Separator)instance;
            return that.StrokeDashArray;
        }
        private void set_207_Separator_StrokeDashArray(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Separator)instance;
            that.StrokeDashArray = (global::Windows.UI.Xaml.Media.DoubleCollection)Value;
        }
        private object get_208_Separator_AxisOrientation(object instance)
        {
            var that = (global::LiveCharts.Uwp.Separator)instance;
            return that.AxisOrientation;
        }
        private object get_209_realTimePower_DevName(object instance)
        {
            var that = (global::GuzzlerMobileApp.views.realTimePower)instance;
            return that.DevName;
        }
        private void set_209_realTimePower_DevName(object instance, object Value)
        {
            var that = (global::GuzzlerMobileApp.views.realTimePower)instance;
            that.DevName = (global::System.String)Value;
        }
        private object get_210_realTimePower_ChartValues(object instance)
        {
            var that = (global::GuzzlerMobileApp.views.realTimePower)instance;
            return that.ChartValues;
        }
        private void set_210_realTimePower_ChartValues(object instance, object Value)
        {
            var that = (global::GuzzlerMobileApp.views.realTimePower)instance;
            that.ChartValues = (global::LiveCharts.ChartValues<global::GuzzlerMobileApp.views.MeasureModel>)Value;
        }
        private object get_211_MeasureModel_DateTime(object instance)
        {
            var that = (global::GuzzlerMobileApp.views.MeasureModel)instance;
            return that.DateTime;
        }
        private void set_211_MeasureModel_DateTime(object instance, object Value)
        {
            var that = (global::GuzzlerMobileApp.views.MeasureModel)instance;
            that.DateTime = (global::System.DateTime)Value;
        }
        private object get_212_MeasureModel_Value(object instance)
        {
            var that = (global::GuzzlerMobileApp.views.MeasureModel)instance;
            return that.Value;
        }
        private void set_212_MeasureModel_Value(object instance, object Value)
        {
            var that = (global::GuzzlerMobileApp.views.MeasureModel)instance;
            that.Value = (global::System.Double)Value;
        }
        private object get_213_realTimePower_DateTimeFormatter(object instance)
        {
            var that = (global::GuzzlerMobileApp.views.realTimePower)instance;
            return that.DateTimeFormatter;
        }
        private void set_213_realTimePower_DateTimeFormatter(object instance, object Value)
        {
            var that = (global::GuzzlerMobileApp.views.realTimePower)instance;
            that.DateTimeFormatter = (global::System.Func<global::System.Double, global::System.String>)Value;
        }
        private object get_214_realTimePower_AxisStep(object instance)
        {
            var that = (global::GuzzlerMobileApp.views.realTimePower)instance;
            return that.AxisStep;
        }
        private void set_214_realTimePower_AxisStep(object instance, object Value)
        {
            var that = (global::GuzzlerMobileApp.views.realTimePower)instance;
            that.AxisStep = (global::System.Double)Value;
        }
        private object get_215_realTimePower_AxisMax(object instance)
        {
            var that = (global::GuzzlerMobileApp.views.realTimePower)instance;
            return that.AxisMax;
        }
        private void set_215_realTimePower_AxisMax(object instance, object Value)
        {
            var that = (global::GuzzlerMobileApp.views.realTimePower)instance;
            that.AxisMax = (global::System.Double)Value;
        }
        private object get_216_realTimePower_AxisMin(object instance)
        {
            var that = (global::GuzzlerMobileApp.views.realTimePower)instance;
            return that.AxisMin;
        }
        private void set_216_realTimePower_AxisMin(object instance, object Value)
        {
            var that = (global::GuzzlerMobileApp.views.realTimePower)instance;
            that.AxisMin = (global::System.Double)Value;
        }
        private object get_217_realTimePower_Timer(object instance)
        {
            var that = (global::GuzzlerMobileApp.views.realTimePower)instance;
            return that.Timer;
        }
        private void set_217_realTimePower_Timer(object instance, object Value)
        {
            var that = (global::GuzzlerMobileApp.views.realTimePower)instance;
            that.Timer = (global::Windows.UI.Xaml.DispatcherTimer)Value;
        }
        private object get_218_realTimePower_IsDataInjectionRunning(object instance)
        {
            var that = (global::GuzzlerMobileApp.views.realTimePower)instance;
            return that.IsDataInjectionRunning;
        }
        private void set_218_realTimePower_IsDataInjectionRunning(object instance, object Value)
        {
            var that = (global::GuzzlerMobileApp.views.realTimePower)instance;
            that.IsDataInjectionRunning = (global::System.Boolean)Value;
        }
        private object get_219_realTimePower_R(object instance)
        {
            var that = (global::GuzzlerMobileApp.views.realTimePower)instance;
            return that.R;
        }
        private void set_219_realTimePower_R(object instance, object Value)
        {
            var that = (global::GuzzlerMobileApp.views.realTimePower)instance;
            that.R = (global::System.Random)Value;
        }
        private object get_220_regDev_DevName(object instance)
        {
            var that = (global::GuzzlerMobileApp.views.regDev)instance;
            return that.DevName;
        }
        private void set_220_regDev_DevName(object instance, object Value)
        {
            var that = (global::GuzzlerMobileApp.views.regDev)instance;
            that.DevName = (global::System.String)Value;
        }
        private object get_221_regDev_Manufacturer(object instance)
        {
            var that = (global::GuzzlerMobileApp.views.regDev)instance;
            return that.Manufacturer;
        }
        private void set_221_regDev_Manufacturer(object instance, object Value)
        {
            var that = (global::GuzzlerMobileApp.views.regDev)instance;
            that.Manufacturer = (global::System.String)Value;
        }
        private object get_222_regDev_GuzzlerId(object instance)
        {
            var that = (global::GuzzlerMobileApp.views.regDev)instance;
            return that.GuzzlerId;
        }
        private void set_222_regDev_GuzzlerId(object instance, object Value)
        {
            var that = (global::GuzzlerMobileApp.views.regDev)instance;
            that.GuzzlerId = (global::System.String)Value;
        }
        private object get_223_regDev_DevType(object instance)
        {
            var that = (global::GuzzlerMobileApp.views.regDev)instance;
            return that.DevType;
        }
        private void set_223_regDev_DevType(object instance, object Value)
        {
            var that = (global::GuzzlerMobileApp.views.regDev)instance;
            that.DevType = (global::System.String)Value;
        }
        private object get_224_regDev_Model(object instance)
        {
            var that = (global::GuzzlerMobileApp.views.regDev)instance;
            return that.Model;
        }
        private void set_224_regDev_Model(object instance, object Value)
        {
            var that = (global::GuzzlerMobileApp.views.regDev)instance;
            that.Model = (global::System.String)Value;
        }
        private object get_225_regDev_Serial(object instance)
        {
            var that = (global::GuzzlerMobileApp.views.regDev)instance;
            return that.Serial;
        }
        private void set_225_regDev_Serial(object instance, object Value)
        {
            var that = (global::GuzzlerMobileApp.views.regDev)instance;
            that.Serial = (global::System.String)Value;
        }
        private object get_226_specialDev_DeviceName(object instance)
        {
            var that = (global::GuzzlerMobileApp.views.specialDev)instance;
            return that.DeviceName;
        }
        private object get_227_PieSlice_Radius(object instance)
        {
            var that = (global::LiveCharts.Uwp.Points.PieSlice)instance;
            return that.Radius;
        }
        private void set_227_PieSlice_Radius(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Points.PieSlice)instance;
            that.Radius = (global::System.Double)Value;
        }
        private object get_228_PieSlice_PushOut(object instance)
        {
            var that = (global::LiveCharts.Uwp.Points.PieSlice)instance;
            return that.PushOut;
        }
        private void set_228_PieSlice_PushOut(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Points.PieSlice)instance;
            that.PushOut = (global::System.Double)Value;
        }
        private object get_229_PieSlice_InnerRadius(object instance)
        {
            var that = (global::LiveCharts.Uwp.Points.PieSlice)instance;
            return that.InnerRadius;
        }
        private void set_229_PieSlice_InnerRadius(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Points.PieSlice)instance;
            that.InnerRadius = (global::System.Double)Value;
        }
        private object get_230_PieSlice_WedgeAngle(object instance)
        {
            var that = (global::LiveCharts.Uwp.Points.PieSlice)instance;
            return that.WedgeAngle;
        }
        private void set_230_PieSlice_WedgeAngle(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Points.PieSlice)instance;
            that.WedgeAngle = (global::System.Double)Value;
        }
        private object get_231_PieSlice_RotationAngle(object instance)
        {
            var that = (global::LiveCharts.Uwp.Points.PieSlice)instance;
            return that.RotationAngle;
        }
        private void set_231_PieSlice_RotationAngle(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Points.PieSlice)instance;
            that.RotationAngle = (global::System.Double)Value;
        }
        private object get_232_PieSlice_XOffset(object instance)
        {
            var that = (global::LiveCharts.Uwp.Points.PieSlice)instance;
            return that.XOffset;
        }
        private void set_232_PieSlice_XOffset(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Points.PieSlice)instance;
            that.XOffset = (global::System.Double)Value;
        }
        private object get_233_PieSlice_YOffset(object instance)
        {
            var that = (global::LiveCharts.Uwp.Points.PieSlice)instance;
            return that.YOffset;
        }
        private void set_233_PieSlice_YOffset(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Points.PieSlice)instance;
            that.YOffset = (global::System.Double)Value;
        }
        private object get_234_PieSlice_Percentage(object instance)
        {
            var that = (global::LiveCharts.Uwp.Points.PieSlice)instance;
            return that.Percentage;
        }
        private object get_235_PieSlice_PieceValue(object instance)
        {
            var that = (global::LiveCharts.Uwp.Points.PieSlice)instance;
            return that.PieceValue;
        }
        private void set_235_PieSlice_PieceValue(object instance, object Value)
        {
            var that = (global::LiveCharts.Uwp.Points.PieSlice)instance;
            that.PieceValue = (global::System.Double)Value;
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember xamlMember = null;
            global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart.Series":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Series", "System.Collections.ObjectModel.Collection`1<WinRTXamlToolkit.Controls.DataVisualization.Charting.ISeries>");
                xamlMember.Getter = get_0_Chart_Series;
                xamlMember.Setter = set_0_Chart_Series;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.ISeries.LegendItems":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.ISeries");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "LegendItems", "System.Collections.ObjectModel.ObservableCollection`1<Object>");
                xamlMember.Getter = get_1_ISeries_LegendItems;
                xamlMember.SetIsReadOnly();
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart.Title":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Title", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_2_Chart_Title;
                xamlMember.Setter = set_2_Chart_Title;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart.TitleStyle":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "TitleStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_3_Chart_TitleStyle;
                xamlMember.Setter = set_3_Chart_TitleStyle;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart.LegendStyle":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "LegendStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_4_Chart_LegendStyle;
                xamlMember.Setter = set_4_Chart_LegendStyle;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart.Axes":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Axes", "System.Collections.ObjectModel.Collection`1<WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis>");
                xamlMember.Getter = get_5_Chart_Axes;
                xamlMember.Setter = set_5_Chart_Axes;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis.Orientation":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Orientation", "WinRTXamlToolkit.Controls.DataVisualization.Charting.AxisOrientation");
                xamlMember.Getter = get_6_IAxis_Orientation;
                xamlMember.Setter = set_6_IAxis_Orientation;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis.RegisteredListeners":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "RegisteredListeners", "System.Collections.ObjectModel.ObservableCollection`1<WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxisListener>");
                xamlMember.Getter = get_7_IAxis_RegisteredListeners;
                xamlMember.SetIsReadOnly();
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis.DependentAxes":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "DependentAxes", "System.Collections.ObjectModel.ObservableCollection`1<WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis>");
                xamlMember.Getter = get_8_IAxis_DependentAxes;
                xamlMember.SetIsReadOnly();
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart.ActualAxes":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "ActualAxes", "System.Collections.ObjectModel.ReadOnlyCollection`1<WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis>");
                xamlMember.Getter = get_9_Chart_ActualAxes;
                xamlMember.SetIsReadOnly();
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart.ChartAreaStyle":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "ChartAreaStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_10_Chart_ChartAreaStyle;
                xamlMember.Setter = set_10_Chart_ChartAreaStyle;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart.LegendItems":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "LegendItems", "System.Collections.ObjectModel.Collection`1<Object>");
                xamlMember.Getter = get_11_Chart_LegendItems;
                xamlMember.SetIsReadOnly();
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart.LegendTitle":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "LegendTitle", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_12_Chart_LegendTitle;
                xamlMember.Setter = set_12_Chart_LegendTitle;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart.PlotAreaStyle":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "PlotAreaStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_13_Chart_PlotAreaStyle;
                xamlMember.Setter = set_13_Chart_PlotAreaStyle;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart.Palette":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Palette", "System.Collections.ObjectModel.Collection`1<Windows.UI.Xaml.ResourceDictionary>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_14_Chart_Palette;
                xamlMember.Setter = set_14_Chart_Palette;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries.ItemsSource":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "ItemsSource", "System.Collections.IEnumerable");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_15_DataPointSeries_ItemsSource;
                xamlMember.Setter = set_15_DataPointSeries_ItemsSource;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries.IndependentValuePath":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "IndependentValuePath", "String");
                xamlMember.Getter = get_16_DataPointSeries_IndependentValuePath;
                xamlMember.Setter = set_16_DataPointSeries_IndependentValuePath;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries.DependentValuePath":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "DependentValuePath", "String");
                xamlMember.Getter = get_17_DataPointSeries_DependentValuePath;
                xamlMember.Setter = set_17_DataPointSeries_DependentValuePath;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.PieSeries.Palette":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.PieSeries");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Palette", "System.Collections.ObjectModel.Collection`1<Windows.UI.Xaml.ResourceDictionary>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_18_PieSeries_Palette;
                xamlMember.Setter = set_18_PieSeries_Palette;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries.DependentValueBinding":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "DependentValueBinding", "Windows.UI.Xaml.Data.Binding");
                xamlMember.Getter = get_19_DataPointSeries_DependentValueBinding;
                xamlMember.Setter = set_19_DataPointSeries_DependentValueBinding;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries.IndependentValueBinding":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "IndependentValueBinding", "Windows.UI.Xaml.Data.Binding");
                xamlMember.Getter = get_20_DataPointSeries_IndependentValueBinding;
                xamlMember.Setter = set_20_DataPointSeries_IndependentValueBinding;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries.AnimationSequence":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "AnimationSequence", "WinRTXamlToolkit.Controls.DataVisualization.Charting.AnimationSequence");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_21_DataPointSeries_AnimationSequence;
                xamlMember.Setter = set_21_DataPointSeries_AnimationSequence;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries.TransitionEasingFunction":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "TransitionEasingFunction", "Windows.UI.Xaml.Media.Animation.EasingFunctionBase");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_22_DataPointSeries_TransitionEasingFunction;
                xamlMember.Setter = set_22_DataPointSeries_TransitionEasingFunction;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries.IsSelectionEnabled":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "IsSelectionEnabled", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_23_DataPointSeries_IsSelectionEnabled;
                xamlMember.Setter = set_23_DataPointSeries_IsSelectionEnabled;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries.SelectedItem":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "SelectedItem", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_24_DataPointSeries_SelectedItem;
                xamlMember.Setter = set_24_DataPointSeries_SelectedItem;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries.DataPointStyle":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "DataPointStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_25_DataPointSeries_DataPointStyle;
                xamlMember.Setter = set_25_DataPointSeries_DataPointStyle;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries.LegendItemStyle":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "LegendItemStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_26_DataPointSeries_LegendItemStyle;
                xamlMember.Setter = set_26_DataPointSeries_LegendItemStyle;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries.TransitionDuration":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "TransitionDuration", "TimeSpan");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_27_DataPointSeries_TransitionDuration;
                xamlMember.Setter = set_27_DataPointSeries_TransitionDuration;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.Series.SeriesHost":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.Series");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "SeriesHost", "WinRTXamlToolkit.Controls.DataVisualization.Charting.ISeriesHost");
                xamlMember.Getter = get_28_Series_SeriesHost;
                xamlMember.Setter = set_28_Series_SeriesHost;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.Series.LegendItems":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.Series");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "LegendItems", "System.Collections.ObjectModel.ObservableCollection`1<Object>");
                xamlMember.Getter = get_29_Series_LegendItems;
                xamlMember.SetIsReadOnly();
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.Series.Title":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.Series");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Title", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_30_Series_Title;
                xamlMember.Setter = set_30_Series_Title;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Legend.TitleStyle":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Legend");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "TitleStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_31_Legend_TitleStyle;
                xamlMember.Setter = set_31_Legend_TitleStyle;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Legend.ContentVisibility":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Legend");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "ContentVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_32_Legend_ContentVisibility;
                xamlMember.SetIsReadOnly();
                break;
            case "WinRTXamlToolkit.Controls.HeaderedItemsControl.Header":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.HeaderedItemsControl");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Header", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_33_HeaderedItemsControl_Header;
                xamlMember.Setter = set_33_HeaderedItemsControl_Header;
                break;
            case "WinRTXamlToolkit.Controls.HeaderedItemsControl.HeaderTemplate":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.HeaderedItemsControl");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "HeaderTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_34_HeaderedItemsControl_HeaderTemplate;
                xamlMember.Setter = set_34_HeaderedItemsControl_HeaderTemplate;
                break;
            case "WinRTXamlToolkit.Controls.HeaderedItemsControl.ItemContainerStyle":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.HeaderedItemsControl");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "ItemContainerStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_35_HeaderedItemsControl_ItemContainerStyle;
                xamlMember.Setter = set_35_HeaderedItemsControl_ItemContainerStyle;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.LineSeries.Points":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.LineSeries");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Points", "Windows.UI.Xaml.Media.PointCollection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_36_LineSeries_Points;
                xamlMember.SetIsReadOnly();
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.LineSeries.PolylineStyle":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.LineSeries");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "PolylineStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_37_LineSeries_PolylineStyle;
                xamlMember.Setter = set_37_LineSeries_PolylineStyle;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.LineAreaBaseSeries`1<WinRTXamlToolkit.Controls.DataVisualization.Charting.LineDataPoint>.DependentRangeAxis":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.LineAreaBaseSeries`1<WinRTXamlToolkit.Controls.DataVisualization.Charting.LineDataPoint>");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "DependentRangeAxis", "WinRTXamlToolkit.Controls.DataVisualization.Charting.IRangeAxis");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_38_LineAreaBaseSeries_DependentRangeAxis;
                xamlMember.Setter = set_38_LineAreaBaseSeries_DependentRangeAxis;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.LineAreaBaseSeries`1<WinRTXamlToolkit.Controls.DataVisualization.Charting.LineDataPoint>.IndependentAxis":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.LineAreaBaseSeries`1<WinRTXamlToolkit.Controls.DataVisualization.Charting.LineDataPoint>");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "IndependentAxis", "WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_39_LineAreaBaseSeries_IndependentAxis;
                xamlMember.Setter = set_39_LineAreaBaseSeries_IndependentAxis;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.LineAreaBaseSeries`1<WinRTXamlToolkit.Controls.DataVisualization.Charting.LineDataPoint>.ActualIndependentAxis":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.LineAreaBaseSeries`1<WinRTXamlToolkit.Controls.DataVisualization.Charting.LineDataPoint>");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "ActualIndependentAxis", "WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis");
                xamlMember.Getter = get_40_LineAreaBaseSeries_ActualIndependentAxis;
                xamlMember.SetIsReadOnly();
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.LineAreaBaseSeries`1<WinRTXamlToolkit.Controls.DataVisualization.Charting.LineDataPoint>.ActualDependentRangeAxis":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.LineAreaBaseSeries`1<WinRTXamlToolkit.Controls.DataVisualization.Charting.LineDataPoint>");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "ActualDependentRangeAxis", "WinRTXamlToolkit.Controls.DataVisualization.Charting.IRangeAxis");
                xamlMember.Getter = get_41_LineAreaBaseSeries_ActualDependentRangeAxis;
                xamlMember.SetIsReadOnly();
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSingleSeriesWithAxes.GlobalSeriesIndex":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSingleSeriesWithAxes");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "GlobalSeriesIndex", "System.Nullable`1<Int32>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_42_DataPointSingleSeriesWithAxes_GlobalSeriesIndex;
                xamlMember.SetIsReadOnly();
                break;
            case "GuzzlerMobileApp.views.chartTry.intYVal":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.views.chartTry");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "intYVal", "String");
                xamlMember.Getter = get_43_chartTry_intYVal;
                xamlMember.Setter = set_43_chartTry_intYVal;
                break;
            case "GuzzlerMobileApp.views.chartTry.maxYVal":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.views.chartTry");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "maxYVal", "String");
                xamlMember.Getter = get_44_chartTry_maxYVal;
                xamlMember.Setter = set_44_chartTry_maxYVal;
                break;
            case "GuzzlerMobileApp.views.chartTry.minYVal":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.views.chartTry");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "minYVal", "String");
                xamlMember.Getter = get_45_chartTry_minYVal;
                xamlMember.Setter = set_45_chartTry_minYVal;
                break;
            case "GuzzlerMobileApp.views.chartTry.intXVal":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.views.chartTry");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "intXVal", "String");
                xamlMember.Getter = get_46_chartTry_intXVal;
                xamlMember.Setter = set_46_chartTry_intXVal;
                break;
            case "GuzzlerMobileApp.views.chartTry.maxXVal":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.views.chartTry");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "maxXVal", "String");
                xamlMember.Getter = get_47_chartTry_maxXVal;
                xamlMember.Setter = set_47_chartTry_maxXVal;
                break;
            case "GuzzlerMobileApp.views.chartTry.minXVal":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.views.chartTry");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "minXVal", "String");
                xamlMember.Getter = get_48_chartTry_minXVal;
                xamlMember.Setter = set_48_chartTry_minXVal;
                break;
            case "GuzzlerMobileApp.views.chartTry.Data":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.views.chartTry");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Data", "System.Collections.Generic.List`1<GuzzlerMobileApp.DataModel.powerDayItem>");
                xamlMember.Getter = get_49_chartTry_Data;
                xamlMember.Setter = set_49_chartTry_Data;
                break;
            case "GuzzlerMobileApp.DataModel.powerDayItem.Day":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.DataModel.powerDayItem");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Day", "Int32");
                xamlMember.Getter = get_50_powerDayItem_Day;
                xamlMember.Setter = set_50_powerDayItem_Day;
                break;
            case "GuzzlerMobileApp.DataModel.powerDayItem.Val":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.DataModel.powerDayItem");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Val", "Double");
                xamlMember.Getter = get_51_powerDayItem_Val;
                xamlMember.Setter = set_51_powerDayItem_Val;
                break;
            case "GuzzlerMobileApp.views.chartTry.Data1":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.views.chartTry");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Data1", "System.Collections.ObjectModel.ObservableCollection`1<GuzzlerMobileApp.DataModel.powerDayItem>");
                xamlMember.Getter = get_52_chartTry_Data1;
                xamlMember.SetIsReadOnly();
                break;
            case "GuzzlerMobileApp.views.chartTry.Data2":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.views.chartTry");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Data2", "System.Collections.ObjectModel.ObservableCollection`1<GuzzlerMobileApp.DataModel.powerDayItem>");
                xamlMember.Getter = get_53_chartTry_Data2;
                xamlMember.SetIsReadOnly();
                break;
            case "LiveCharts.Uwp.Charts.Base.Chart.LegendLocation":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Charts.Base.Chart");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "LegendLocation", "LiveCharts.LegendLocation");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_54_Chart_LegendLocation;
                xamlMember.Setter = set_54_Chart_LegendLocation;
                break;
            case "LiveCharts.Uwp.Charts.Base.Chart.Series":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Charts.Base.Chart");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Series", "LiveCharts.SeriesCollection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_55_Chart_Series;
                xamlMember.Setter = set_55_Chart_Series;
                break;
            case "LiveCharts.Definitions.Series.ISeriesView.Model":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Definitions.Series.ISeriesView");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Model", "LiveCharts.SeriesAlgorithm");
                xamlMember.Getter = get_56_ISeriesView_Model;
                xamlMember.Setter = set_56_ISeriesView_Model;
                break;
            case "LiveCharts.Definitions.Series.ISeriesView.Values":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Definitions.Series.ISeriesView");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Values", "LiveCharts.IChartValues");
                xamlMember.Getter = get_57_ISeriesView_Values;
                xamlMember.Setter = set_57_ISeriesView_Values;
                break;
            case "LiveCharts.Definitions.Series.ISeriesView.DataLabels":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Definitions.Series.ISeriesView");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "DataLabels", "Boolean");
                xamlMember.Getter = get_58_ISeriesView_DataLabels;
                xamlMember.SetIsReadOnly();
                break;
            case "LiveCharts.Definitions.Series.ISeriesView.ScalesXAt":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Definitions.Series.ISeriesView");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "ScalesXAt", "Int32");
                xamlMember.Getter = get_59_ISeriesView_ScalesXAt;
                xamlMember.Setter = set_59_ISeriesView_ScalesXAt;
                break;
            case "LiveCharts.Definitions.Series.ISeriesView.ScalesYAt":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Definitions.Series.ISeriesView");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "ScalesYAt", "Int32");
                xamlMember.Getter = get_60_ISeriesView_ScalesYAt;
                xamlMember.Setter = set_60_ISeriesView_ScalesYAt;
                break;
            case "LiveCharts.Definitions.Series.ISeriesView.Configuration":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Definitions.Series.ISeriesView");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Configuration", "Object");
                xamlMember.Getter = get_61_ISeriesView_Configuration;
                xamlMember.Setter = set_61_ISeriesView_Configuration;
                break;
            case "LiveCharts.Definitions.Series.ISeriesView.IsSeriesVisible":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Definitions.Series.ISeriesView");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "IsSeriesVisible", "Boolean");
                xamlMember.Getter = get_62_ISeriesView_IsSeriesVisible;
                xamlMember.SetIsReadOnly();
                break;
            case "LiveCharts.Definitions.Series.ISeriesView.LabelPoint":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Definitions.Series.ISeriesView");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "LabelPoint", "System.Func`2<LiveCharts.ChartPoint, String>");
                xamlMember.Getter = get_63_ISeriesView_LabelPoint;
                xamlMember.Setter = set_63_ISeriesView_LabelPoint;
                break;
            case "LiveCharts.Definitions.Series.ISeriesView.ActualValues":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Definitions.Series.ISeriesView");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "ActualValues", "LiveCharts.IChartValues");
                xamlMember.Getter = get_64_ISeriesView_ActualValues;
                xamlMember.SetIsReadOnly();
                break;
            case "LiveCharts.Uwp.Charts.Base.Chart.AnimationsSpeed":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Charts.Base.Chart");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "AnimationsSpeed", "TimeSpan");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_65_Chart_AnimationsSpeed;
                xamlMember.Setter = set_65_Chart_AnimationsSpeed;
                break;
            case "LiveCharts.Uwp.Charts.Base.Chart.Hoverable":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Charts.Base.Chart");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Hoverable", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_66_Chart_Hoverable;
                xamlMember.Setter = set_66_Chart_Hoverable;
                break;
            case "LiveCharts.Uwp.PieChart.InnerRadius":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.PieChart");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "InnerRadius", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_67_PieChart_InnerRadius;
                xamlMember.Setter = set_67_PieChart_InnerRadius;
                break;
            case "LiveCharts.Uwp.PieChart.StartingRotationAngle":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.PieChart");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "StartingRotationAngle", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_68_PieChart_StartingRotationAngle;
                xamlMember.Setter = set_68_PieChart_StartingRotationAngle;
                break;
            case "LiveCharts.Uwp.PieChart.HoverPushOut":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.PieChart");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "HoverPushOut", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_69_PieChart_HoverPushOut;
                xamlMember.Setter = set_69_PieChart_HoverPushOut;
                break;
            case "LiveCharts.Uwp.Charts.Base.Chart.IsMocked":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Charts.Base.Chart");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "IsMocked", "Boolean");
                xamlMember.Getter = get_70_Chart_IsMocked;
                xamlMember.Setter = set_70_Chart_IsMocked;
                break;
            case "LiveCharts.Uwp.Charts.Base.Chart.SeriesColors":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Charts.Base.Chart");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "SeriesColors", "LiveCharts.Uwp.ColorsCollection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_71_Chart_SeriesColors;
                xamlMember.Setter = set_71_Chart_SeriesColors;
                break;
            case "Windows.UI.Color.A":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "A", "Byte");
                xamlMember.Getter = get_72_Color_A;
                xamlMember.Setter = set_72_Color_A;
                break;
            case "Windows.UI.Color.B":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "B", "Byte");
                xamlMember.Getter = get_73_Color_B;
                xamlMember.Setter = set_73_Color_B;
                break;
            case "Windows.UI.Color.G":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "G", "Byte");
                xamlMember.Getter = get_74_Color_G;
                xamlMember.Setter = set_74_Color_G;
                break;
            case "Windows.UI.Color.R":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "R", "Byte");
                xamlMember.Getter = get_75_Color_R;
                xamlMember.Setter = set_75_Color_R;
                break;
            case "LiveCharts.Uwp.Charts.Base.Chart.AxisY":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Charts.Base.Chart");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "AxisY", "LiveCharts.Uwp.AxesCollection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_76_Chart_AxisY;
                xamlMember.Setter = set_76_Chart_AxisY;
                break;
            case "LiveCharts.Uwp.Axis.Model":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Axis");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Model", "LiveCharts.AxisCore");
                xamlMember.Getter = get_77_Axis_Model;
                xamlMember.Setter = set_77_Axis_Model;
                break;
            case "LiveCharts.Uwp.Axis.PreviousMaxValue":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Axis");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "PreviousMaxValue", "Double");
                xamlMember.Getter = get_78_Axis_PreviousMaxValue;
                xamlMember.SetIsReadOnly();
                break;
            case "LiveCharts.Uwp.Axis.PreviousMinValue":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Axis");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "PreviousMinValue", "Double");
                xamlMember.Getter = get_79_Axis_PreviousMinValue;
                xamlMember.SetIsReadOnly();
                break;
            case "LiveCharts.Uwp.Axis.Labels":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Axis");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Labels", "System.Collections.Generic.IList`1<String>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_80_Axis_Labels;
                xamlMember.Setter = set_80_Axis_Labels;
                break;
            case "LiveCharts.Uwp.Axis.Sections":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Axis");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Sections", "LiveCharts.Uwp.SectionsCollection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_81_Axis_Sections;
                xamlMember.Setter = set_81_Axis_Sections;
                break;
            case "LiveCharts.Uwp.AxisSection.Model":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.AxisSection");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Model", "LiveCharts.AxisSectionCore");
                xamlMember.Getter = get_82_AxisSection_Model;
                xamlMember.Setter = set_82_AxisSection_Model;
                break;
            case "LiveCharts.Uwp.AxisSection.Label":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.AxisSection");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Label", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_83_AxisSection_Label;
                xamlMember.Setter = set_83_AxisSection_Label;
                break;
            case "LiveCharts.Uwp.AxisSection.Value":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.AxisSection");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Value", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_84_AxisSection_Value;
                xamlMember.Setter = set_84_AxisSection_Value;
                break;
            case "LiveCharts.Uwp.AxisSection.SectionWidth":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.AxisSection");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "SectionWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_85_AxisSection_SectionWidth;
                xamlMember.Setter = set_85_AxisSection_SectionWidth;
                break;
            case "LiveCharts.Uwp.AxisSection.Draggable":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.AxisSection");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Draggable", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_86_AxisSection_Draggable;
                xamlMember.Setter = set_86_AxisSection_Draggable;
                break;
            case "LiveCharts.Uwp.AxisSection.Stroke":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.AxisSection");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Stroke", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_87_AxisSection_Stroke;
                xamlMember.Setter = set_87_AxisSection_Stroke;
                break;
            case "LiveCharts.Uwp.AxisSection.Fill":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.AxisSection");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Fill", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_88_AxisSection_Fill;
                xamlMember.Setter = set_88_AxisSection_Fill;
                break;
            case "LiveCharts.Uwp.AxisSection.StrokeThickness":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.AxisSection");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "StrokeThickness", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_89_AxisSection_StrokeThickness;
                xamlMember.Setter = set_89_AxisSection_StrokeThickness;
                break;
            case "LiveCharts.Uwp.AxisSection.StrokeDashArray":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.AxisSection");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "StrokeDashArray", "Windows.UI.Xaml.Media.DoubleCollection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_90_AxisSection_StrokeDashArray;
                xamlMember.Setter = set_90_AxisSection_StrokeDashArray;
                break;
            case "LiveCharts.Uwp.Axis.LabelFormatter":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Axis");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "LabelFormatter", "System.Func`2<Double, String>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_91_Axis_LabelFormatter;
                xamlMember.Setter = set_91_Axis_LabelFormatter;
                break;
            case "LiveCharts.Uwp.Axis.Separator":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Axis");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Separator", "LiveCharts.Definitions.Charts.ISeparatorView");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_92_Axis_Separator;
                xamlMember.Setter = set_92_Axis_Separator;
                break;
            case "LiveCharts.Uwp.Axis.ShowLabels":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Axis");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "ShowLabels", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_93_Axis_ShowLabels;
                xamlMember.Setter = set_93_Axis_ShowLabels;
                break;
            case "LiveCharts.Uwp.Axis.MaxValue":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Axis");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "MaxValue", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_94_Axis_MaxValue;
                xamlMember.Setter = set_94_Axis_MaxValue;
                break;
            case "LiveCharts.Uwp.Axis.MinValue":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Axis");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "MinValue", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_95_Axis_MinValue;
                xamlMember.Setter = set_95_Axis_MinValue;
                break;
            case "LiveCharts.Uwp.Axis.MinRange":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Axis");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "MinRange", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_96_Axis_MinRange;
                xamlMember.Setter = set_96_Axis_MinRange;
                break;
            case "LiveCharts.Uwp.Axis.MaxRange":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Axis");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "MaxRange", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_97_Axis_MaxRange;
                xamlMember.Setter = set_97_Axis_MaxRange;
                break;
            case "LiveCharts.Uwp.Axis.Title":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Axis");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Title", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_98_Axis_Title;
                xamlMember.Setter = set_98_Axis_Title;
                break;
            case "LiveCharts.Uwp.Axis.Position":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Axis");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Position", "LiveCharts.AxisPosition");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_99_Axis_Position;
                xamlMember.Setter = set_99_Axis_Position;
                break;
            case "LiveCharts.Uwp.Axis.IsMerged":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Axis");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "IsMerged", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_100_Axis_IsMerged;
                xamlMember.Setter = set_100_Axis_IsMerged;
                break;
            case "LiveCharts.Uwp.Axis.BarUnit":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Axis");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "BarUnit", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_101_Axis_BarUnit;
                xamlMember.Setter = set_101_Axis_BarUnit;
                break;
            case "LiveCharts.Uwp.Axis.DisableAnimations":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Axis");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "DisableAnimations", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_102_Axis_DisableAnimations;
                xamlMember.Setter = set_102_Axis_DisableAnimations;
                break;
            case "LiveCharts.Uwp.Axis.FontFamily":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Axis");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "FontFamily", "Windows.UI.Xaml.Media.FontFamily");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_103_Axis_FontFamily;
                xamlMember.Setter = set_103_Axis_FontFamily;
                break;
            case "LiveCharts.Uwp.Axis.FontSize":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Axis");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "FontSize", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_104_Axis_FontSize;
                xamlMember.Setter = set_104_Axis_FontSize;
                break;
            case "LiveCharts.Uwp.Axis.FontWeight":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Axis");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "FontWeight", "Windows.UI.Text.FontWeight");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_105_Axis_FontWeight;
                xamlMember.Setter = set_105_Axis_FontWeight;
                break;
            case "LiveCharts.Uwp.Axis.FontStyle":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Axis");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "FontStyle", "Windows.UI.Text.FontStyle");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_106_Axis_FontStyle;
                xamlMember.Setter = set_106_Axis_FontStyle;
                break;
            case "LiveCharts.Uwp.Axis.FontStretch":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Axis");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "FontStretch", "Windows.UI.Text.FontStretch");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_107_Axis_FontStretch;
                xamlMember.Setter = set_107_Axis_FontStretch;
                break;
            case "LiveCharts.Uwp.Axis.Foreground":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Axis");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Foreground", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_108_Axis_Foreground;
                xamlMember.Setter = set_108_Axis_Foreground;
                break;
            case "LiveCharts.Uwp.Axis.LabelsRotation":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Axis");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "LabelsRotation", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_109_Axis_LabelsRotation;
                xamlMember.Setter = set_109_Axis_LabelsRotation;
                break;
            case "LiveCharts.Uwp.Axis.IsEnabled":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Axis");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "IsEnabled", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_110_Axis_IsEnabled;
                xamlMember.Setter = set_110_Axis_IsEnabled;
                break;
            case "LiveCharts.Uwp.Axis.AxisOrientation":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Axis");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "AxisOrientation", "LiveCharts.AxisOrientation");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_111_Axis_AxisOrientation;
                xamlMember.SetIsReadOnly();
                break;
            case "LiveCharts.Uwp.Charts.Base.Chart.AxisX":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Charts.Base.Chart");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "AxisX", "LiveCharts.Uwp.AxesCollection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_112_Chart_AxisX;
                xamlMember.Setter = set_112_Chart_AxisX;
                break;
            case "LiveCharts.Uwp.Charts.Base.Chart.ChartLegend":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Charts.Base.Chart");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "ChartLegend", "Windows.UI.Xaml.Controls.UserControl");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_113_Chart_ChartLegend;
                xamlMember.Setter = set_113_Chart_ChartLegend;
                break;
            case "LiveCharts.Uwp.Charts.Base.Chart.Zoom":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Charts.Base.Chart");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Zoom", "LiveCharts.ZoomingOptions");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_114_Chart_Zoom;
                xamlMember.Setter = set_114_Chart_Zoom;
                break;
            case "LiveCharts.Uwp.Charts.Base.Chart.DisableAnimations":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Charts.Base.Chart");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "DisableAnimations", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_115_Chart_DisableAnimations;
                xamlMember.Setter = set_115_Chart_DisableAnimations;
                break;
            case "LiveCharts.Uwp.Charts.Base.Chart.DataTooltip":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Charts.Base.Chart");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "DataTooltip", "Windows.UI.Xaml.Controls.UserControl");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_116_Chart_DataTooltip;
                xamlMember.Setter = set_116_Chart_DataTooltip;
                break;
            case "LiveCharts.Uwp.Charts.Base.Chart.ScrollMode":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Charts.Base.Chart");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "ScrollMode", "LiveCharts.ScrollMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_117_Chart_ScrollMode;
                xamlMember.Setter = set_117_Chart_ScrollMode;
                break;
            case "LiveCharts.Uwp.Charts.Base.Chart.ScrollHorizontalFrom":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Charts.Base.Chart");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "ScrollHorizontalFrom", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_118_Chart_ScrollHorizontalFrom;
                xamlMember.Setter = set_118_Chart_ScrollHorizontalFrom;
                break;
            case "LiveCharts.Uwp.Charts.Base.Chart.ScrollHorizontalTo":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Charts.Base.Chart");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "ScrollHorizontalTo", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_119_Chart_ScrollHorizontalTo;
                xamlMember.Setter = set_119_Chart_ScrollHorizontalTo;
                break;
            case "LiveCharts.Uwp.Charts.Base.Chart.ScrollVerticalFrom":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Charts.Base.Chart");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "ScrollVerticalFrom", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_120_Chart_ScrollVerticalFrom;
                xamlMember.Setter = set_120_Chart_ScrollVerticalFrom;
                break;
            case "LiveCharts.Uwp.Charts.Base.Chart.ScrollVerticalTo":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Charts.Base.Chart");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "ScrollVerticalTo", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_121_Chart_ScrollVerticalTo;
                xamlMember.Setter = set_121_Chart_ScrollVerticalTo;
                break;
            case "LiveCharts.Uwp.Charts.Base.Chart.ScrollBarFill":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Charts.Base.Chart");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "ScrollBarFill", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_122_Chart_ScrollBarFill;
                xamlMember.Setter = set_122_Chart_ScrollBarFill;
                break;
            case "LiveCharts.Uwp.Charts.Base.Chart.ZoomingSpeed":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Charts.Base.Chart");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "ZoomingSpeed", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_123_Chart_ZoomingSpeed;
                xamlMember.Setter = set_123_Chart_ZoomingSpeed;
                break;
            case "LiveCharts.Uwp.Charts.Base.Chart.UpdaterState":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Charts.Base.Chart");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "UpdaterState", "LiveCharts.UpdaterState");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_124_Chart_UpdaterState;
                xamlMember.Setter = set_124_Chart_UpdaterState;
                break;
            case "LiveCharts.Uwp.Charts.Base.Chart.Model":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Charts.Base.Chart");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Model", "LiveCharts.Charts.ChartCore");
                xamlMember.Getter = get_125_Chart_Model;
                xamlMember.SetIsReadOnly();
                break;
            case "LiveCharts.Uwp.Charts.Base.Chart.HasTooltip":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Charts.Base.Chart");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "HasTooltip", "Boolean");
                xamlMember.Getter = get_126_Chart_HasTooltip;
                xamlMember.SetIsReadOnly();
                break;
            case "LiveCharts.Uwp.Charts.Base.Chart.HasDataClickEventAttached":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Charts.Base.Chart");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "HasDataClickEventAttached", "Boolean");
                xamlMember.Getter = get_127_Chart_HasDataClickEventAttached;
                xamlMember.SetIsReadOnly();
                break;
            case "LiveCharts.Uwp.Charts.Base.Chart.IsControlLoaded":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Charts.Base.Chart");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "IsControlLoaded", "Boolean");
                xamlMember.Getter = get_128_Chart_IsControlLoaded;
                xamlMember.SetIsReadOnly();
                break;
            case "LiveCharts.Uwp.Charts.Base.Chart.IsInDesignMode":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Charts.Base.Chart");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "IsInDesignMode", "Boolean");
                xamlMember.Getter = get_129_Chart_IsInDesignMode;
                xamlMember.SetIsReadOnly();
                break;
            case "LiveCharts.Uwp.Charts.Base.Chart.ActualSeries":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Charts.Base.Chart");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "ActualSeries", "System.Collections.Generic.IEnumerable`1<LiveCharts.Definitions.Series.ISeriesView>");
                xamlMember.Getter = get_130_Chart_ActualSeries;
                xamlMember.SetIsReadOnly();
                break;
            case "LiveCharts.Uwp.Charts.Base.Chart.TooltipTimeout":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Charts.Base.Chart");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "TooltipTimeout", "TimeSpan");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_131_Chart_TooltipTimeout;
                xamlMember.Setter = set_131_Chart_TooltipTimeout;
                break;
            case "GuzzlerMobileApp.views.dailyColumn.DevName":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.views.dailyColumn");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "DevName", "String");
                xamlMember.Getter = get_132_dailyColumn_DevName;
                xamlMember.SetIsReadOnly();
                break;
            case "GuzzlerMobileApp.views.dailyColumn.powerPerHour":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.views.dailyColumn");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "powerPerHour", "System.Collections.Generic.List`1<GuzzlerMobileApp.DataModel.powerDayItem>");
                xamlMember.Getter = get_133_dailyColumn_powerPerHour;
                xamlMember.SetIsReadOnly();
                break;
            case "GuzzlerMobileApp.views.dailyColumn.DevGuzzeled":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.views.dailyColumn");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "DevGuzzeled", "String");
                xamlMember.Getter = get_134_dailyColumn_DevGuzzeled;
                xamlMember.SetIsReadOnly();
                break;
            case "LiveCharts.Uwp.CartesianChart.VisualElements":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.CartesianChart");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "VisualElements", "LiveCharts.VisualElementsCollection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_135_CartesianChart_VisualElements;
                xamlMember.Setter = set_135_CartesianChart_VisualElements;
                break;
            case "LiveCharts.Definitions.Charts.ICartesianVisualElement.X":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Definitions.Charts.ICartesianVisualElement");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "X", "Double");
                xamlMember.Getter = get_136_ICartesianVisualElement_X;
                xamlMember.Setter = set_136_ICartesianVisualElement_X;
                break;
            case "LiveCharts.Definitions.Charts.ICartesianVisualElement.Y":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Definitions.Charts.ICartesianVisualElement");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Y", "Double");
                xamlMember.Getter = get_137_ICartesianVisualElement_Y;
                xamlMember.Setter = set_137_ICartesianVisualElement_Y;
                break;
            case "LiveCharts.Definitions.Charts.ICartesianVisualElement.AxisX":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Definitions.Charts.ICartesianVisualElement");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "AxisX", "Int32");
                xamlMember.Getter = get_138_ICartesianVisualElement_AxisX;
                xamlMember.Setter = set_138_ICartesianVisualElement_AxisX;
                break;
            case "LiveCharts.Definitions.Charts.ICartesianVisualElement.AxisY":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Definitions.Charts.ICartesianVisualElement");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "AxisY", "Int32");
                xamlMember.Getter = get_139_ICartesianVisualElement_AxisY;
                xamlMember.Setter = set_139_ICartesianVisualElement_AxisY;
                break;
            case "GuzzlerMobileApp.views.dailyLog.DevName":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.views.dailyLog");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "DevName", "String");
                xamlMember.Getter = get_140_dailyLog_DevName;
                xamlMember.SetIsReadOnly();
                break;
            case "GuzzlerMobileApp.views.dailyLog.Date":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.views.dailyLog");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Date", "String");
                xamlMember.Getter = get_141_dailyLog_Date;
                xamlMember.SetIsReadOnly();
                break;
            case "GuzzlerMobileApp.views.dailyLog.maxTimeVal":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.views.dailyLog");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "maxTimeVal", "System.DateTime");
                xamlMember.Getter = get_142_dailyLog_maxTimeVal;
                xamlMember.Setter = set_142_dailyLog_maxTimeVal;
                break;
            case "GuzzlerMobileApp.views.dailyLog.minTimeVal":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.views.dailyLog");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "minTimeVal", "System.DateTime");
                xamlMember.Getter = get_143_dailyLog_minTimeVal;
                xamlMember.Setter = set_143_dailyLog_minTimeVal;
                break;
            case "GuzzlerMobileApp.views.dailyLog.Formatter":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.views.dailyLog");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Formatter", "System.Func`2<Double, String>");
                xamlMember.Getter = get_144_dailyLog_Formatter;
                xamlMember.Setter = set_144_dailyLog_Formatter;
                break;
            case "GuzzlerMobileApp.views.dailyLog.Series":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.views.dailyLog");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Series", "LiveCharts.SeriesCollection");
                xamlMember.Getter = get_145_dailyLog_Series;
                xamlMember.Setter = set_145_dailyLog_Series;
                break;
            case "GuzzlerMobileApp.views.dailyLog.Labels":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.views.dailyLog");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Labels", "String[]");
                xamlMember.Getter = get_146_dailyLog_Labels;
                xamlMember.Setter = set_146_dailyLog_Labels;
                break;
            case "GuzzlerMobileApp.views.dailyPie.DevName":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.views.dailyPie");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "DevName", "String");
                xamlMember.Getter = get_147_dailyPie_DevName;
                xamlMember.SetIsReadOnly();
                break;
            case "GuzzlerMobileApp.views.dailyPie.powerPartition":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.views.dailyPie");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "powerPartition", "System.Collections.Generic.List`1<GuzzlerMobileApp.DataModel.piePowerItem>");
                xamlMember.Getter = get_148_dailyPie_powerPartition;
                xamlMember.SetIsReadOnly();
                break;
            case "GuzzlerMobileApp.DataModel.piePowerItem.Dev":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.DataModel.piePowerItem");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Dev", "String");
                xamlMember.Getter = get_149_piePowerItem_Dev;
                xamlMember.Setter = set_149_piePowerItem_Dev;
                break;
            case "GuzzlerMobileApp.DataModel.piePowerItem.Val":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.DataModel.piePowerItem");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Val", "Double");
                xamlMember.Getter = get_150_piePowerItem_Val;
                xamlMember.Setter = set_150_piePowerItem_Val;
                break;
            case "GuzzlerMobileApp.views.dailyPie.DevGuzzeled":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.views.dailyPie");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "DevGuzzeled", "String");
                xamlMember.Getter = get_151_dailyPie_DevGuzzeled;
                xamlMember.SetIsReadOnly();
                break;
            case "GuzzlerMobileApp.views.dailyPie.PointLabel":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.views.dailyPie");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "PointLabel", "System.Func`2<LiveCharts.ChartPoint, String>");
                xamlMember.Getter = get_152_dailyPie_PointLabel;
                xamlMember.Setter = set_152_dailyPie_PointLabel;
                break;
            case "GuzzlerMobileApp.views.dailyPie.Series":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.views.dailyPie");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Series", "LiveCharts.SeriesCollection");
                xamlMember.Getter = get_153_dailyPie_Series;
                xamlMember.Setter = set_153_dailyPie_Series;
                break;
            case "GuzzlerMobileApp.views.deviceDetails.DevName":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.views.deviceDetails");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "DevName", "String");
                xamlMember.Getter = get_154_deviceDetails_DevName;
                xamlMember.Setter = set_154_deviceDetails_DevName;
                break;
            case "GuzzlerMobileApp.views.deviceDetails.Manufacturer":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.views.deviceDetails");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Manufacturer", "String");
                xamlMember.Getter = get_155_deviceDetails_Manufacturer;
                xamlMember.Setter = set_155_deviceDetails_Manufacturer;
                break;
            case "GuzzlerMobileApp.views.deviceDetails.GuzzlerId":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.views.deviceDetails");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "GuzzlerId", "String");
                xamlMember.Getter = get_156_deviceDetails_GuzzlerId;
                xamlMember.Setter = set_156_deviceDetails_GuzzlerId;
                break;
            case "GuzzlerMobileApp.views.deviceDetails.DevType":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.views.deviceDetails");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "DevType", "String");
                xamlMember.Getter = get_157_deviceDetails_DevType;
                xamlMember.Setter = set_157_deviceDetails_DevType;
                break;
            case "GuzzlerMobileApp.views.deviceDetails.Model":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.views.deviceDetails");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Model", "String");
                xamlMember.Getter = get_158_deviceDetails_Model;
                xamlMember.Setter = set_158_deviceDetails_Model;
                break;
            case "GuzzlerMobileApp.views.deviceDetails.Serial":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.views.deviceDetails");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Serial", "String");
                xamlMember.Getter = get_159_deviceDetails_Serial;
                xamlMember.Setter = set_159_deviceDetails_Serial;
                break;
            case "GuzzlerMobileApp.views.deviceDetails.TimeCreated":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.views.deviceDetails");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "TimeCreated", "String");
                xamlMember.Getter = get_160_deviceDetails_TimeCreated;
                xamlMember.Setter = set_160_deviceDetails_TimeCreated;
                break;
            case "GuzzlerMobileApp.views.devices.IsNextEnabled":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.views.devices");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "IsNextEnabled", "Boolean");
                xamlMember.Getter = get_161_devices_IsNextEnabled;
                xamlMember.Setter = set_161_devices_IsNextEnabled;
                break;
            case "GuzzlerMobileApp.views.devices.ChosenDev":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.views.devices");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "ChosenDev", "String");
                xamlMember.Getter = get_162_devices_ChosenDev;
                xamlMember.Setter = set_162_devices_ChosenDev;
                break;
            case "GuzzlerMobileApp.views.devices.DevToRemove":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.views.devices");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "DevToRemove", "String");
                xamlMember.Getter = get_163_devices_DevToRemove;
                xamlMember.Setter = set_163_devices_DevToRemove;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.ColumnBarBaseSeries`1<WinRTXamlToolkit.Controls.DataVisualization.Charting.ColumnDataPoint>.DependentRangeAxis":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.ColumnBarBaseSeries`1<WinRTXamlToolkit.Controls.DataVisualization.Charting.ColumnDataPoint>");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "DependentRangeAxis", "WinRTXamlToolkit.Controls.DataVisualization.Charting.IRangeAxis");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_164_ColumnBarBaseSeries_DependentRangeAxis;
                xamlMember.Setter = set_164_ColumnBarBaseSeries_DependentRangeAxis;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.ColumnBarBaseSeries`1<WinRTXamlToolkit.Controls.DataVisualization.Charting.ColumnDataPoint>.IndependentAxis":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.ColumnBarBaseSeries`1<WinRTXamlToolkit.Controls.DataVisualization.Charting.ColumnDataPoint>");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "IndependentAxis", "WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_165_ColumnBarBaseSeries_IndependentAxis;
                xamlMember.Setter = set_165_ColumnBarBaseSeries_IndependentAxis;
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.ColumnBarBaseSeries`1<WinRTXamlToolkit.Controls.DataVisualization.Charting.ColumnDataPoint>.ActualDependentRangeAxis":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.ColumnBarBaseSeries`1<WinRTXamlToolkit.Controls.DataVisualization.Charting.ColumnDataPoint>");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "ActualDependentRangeAxis", "WinRTXamlToolkit.Controls.DataVisualization.Charting.IRangeAxis");
                xamlMember.Getter = get_166_ColumnBarBaseSeries_ActualDependentRangeAxis;
                xamlMember.SetIsReadOnly();
                break;
            case "WinRTXamlToolkit.Controls.DataVisualization.Charting.ColumnBarBaseSeries`1<WinRTXamlToolkit.Controls.DataVisualization.Charting.ColumnDataPoint>.ActualIndependentAxis":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("WinRTXamlToolkit.Controls.DataVisualization.Charting.ColumnBarBaseSeries`1<WinRTXamlToolkit.Controls.DataVisualization.Charting.ColumnDataPoint>");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "ActualIndependentAxis", "WinRTXamlToolkit.Controls.DataVisualization.Charting.IAxis");
                xamlMember.Getter = get_167_ColumnBarBaseSeries_ActualIndependentAxis;
                xamlMember.SetIsReadOnly();
                break;
            case "GuzzlerMobileApp.views.estimatedCost.DevName":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.views.estimatedCost");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "DevName", "String");
                xamlMember.Getter = get_168_estimatedCost_DevName;
                xamlMember.SetIsReadOnly();
                break;
            case "GuzzlerMobileApp.views.estimatedCost.Tariff":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.views.estimatedCost");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Tariff", "String");
                xamlMember.Getter = get_169_estimatedCost_Tariff;
                xamlMember.SetIsReadOnly();
                break;
            case "GuzzlerMobileApp.views.historyLog.DevName":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.views.historyLog");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "DevName", "String");
                xamlMember.Getter = get_170_historyLog_DevName;
                xamlMember.SetIsReadOnly();
                break;
            case "GuzzlerMobileApp.views.message.Result":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.views.message");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Result", "GuzzlerMobileApp.views.MyResult");
                xamlMember.Getter = get_171_message_Result;
                xamlMember.Setter = set_171_message_Result;
                break;
            case "GuzzlerMobileApp.views.message.mTitle":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.views.message");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "mTitle", "String");
                xamlMember.Getter = get_172_message_mTitle;
                xamlMember.Setter = set_172_message_mTitle;
                break;
            case "GuzzlerMobileApp.views.message.Msg":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.views.message");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Msg", "String");
                xamlMember.Getter = get_173_message_Msg;
                xamlMember.Setter = set_173_message_Msg;
                break;
            case "GuzzlerMobileApp.views.PointShapeLineExample.SeriesCollection":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.views.PointShapeLineExample");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "SeriesCollection", "LiveCharts.SeriesCollection");
                xamlMember.Getter = get_174_PointShapeLineExample_SeriesCollection;
                xamlMember.Setter = set_174_PointShapeLineExample_SeriesCollection;
                break;
            case "GuzzlerMobileApp.views.PointShapeLineExample.Labels":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.views.PointShapeLineExample");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Labels", "String[]");
                xamlMember.Getter = get_175_PointShapeLineExample_Labels;
                xamlMember.Setter = set_175_PointShapeLineExample_Labels;
                break;
            case "GuzzlerMobileApp.views.PointShapeLineExample.YFormatter":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.views.PointShapeLineExample");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "YFormatter", "System.Func`2<Double, String>");
                xamlMember.Getter = get_176_PointShapeLineExample_YFormatter;
                xamlMember.Setter = set_176_PointShapeLineExample_YFormatter;
                break;
            case "LiveCharts.Uwp.Series.Values":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Series");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Values", "LiveCharts.IChartValues");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_177_Series_Values;
                xamlMember.Setter = set_177_Series_Values;
                break;
            case "LiveCharts.Uwp.LineSeries.PointGeometrySize":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.LineSeries");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "PointGeometrySize", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_178_LineSeries_PointGeometrySize;
                xamlMember.Setter = set_178_LineSeries_PointGeometrySize;
                break;
            case "LiveCharts.Uwp.Series.StrokeThickness":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Series");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "StrokeThickness", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_179_Series_StrokeThickness;
                xamlMember.Setter = set_179_Series_StrokeThickness;
                break;
            case "LiveCharts.Uwp.LineSeries.PointForeround":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.LineSeries");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "PointForeround", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_180_LineSeries_PointForeround;
                xamlMember.Setter = set_180_LineSeries_PointForeround;
                break;
            case "LiveCharts.Uwp.LineSeries.LineSmoothness":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.LineSeries");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "LineSmoothness", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_181_LineSeries_LineSmoothness;
                xamlMember.Setter = set_181_LineSeries_LineSmoothness;
                break;
            case "LiveCharts.Uwp.LineSeries.AreaLimit":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.LineSeries");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "AreaLimit", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_182_LineSeries_AreaLimit;
                xamlMember.Setter = set_182_LineSeries_AreaLimit;
                break;
            case "LiveCharts.Uwp.Series.Model":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Series");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Model", "LiveCharts.SeriesAlgorithm");
                xamlMember.Getter = get_183_Series_Model;
                xamlMember.Setter = set_183_Series_Model;
                break;
            case "LiveCharts.Uwp.Series.ActualValues":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Series");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "ActualValues", "LiveCharts.IChartValues");
                xamlMember.Getter = get_184_Series_ActualValues;
                xamlMember.SetIsReadOnly();
                break;
            case "LiveCharts.Uwp.Series.IsSeriesVisible":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Series");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "IsSeriesVisible", "Boolean");
                xamlMember.Getter = get_185_Series_IsSeriesVisible;
                xamlMember.SetIsReadOnly();
                break;
            case "LiveCharts.Uwp.Series.ChartPoints":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Series");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "ChartPoints", "System.Collections.Generic.IEnumerable`1<LiveCharts.ChartPoint>");
                xamlMember.Getter = get_186_Series_ChartPoints;
                xamlMember.SetIsReadOnly();
                break;
            case "LiveCharts.Uwp.Series.Title":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Series");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Title", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_187_Series_Title;
                xamlMember.Setter = set_187_Series_Title;
                break;
            case "LiveCharts.Uwp.Series.Stroke":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Series");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Stroke", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_188_Series_Stroke;
                xamlMember.Setter = set_188_Series_Stroke;
                break;
            case "LiveCharts.Uwp.Series.Fill":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Series");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Fill", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_189_Series_Fill;
                xamlMember.Setter = set_189_Series_Fill;
                break;
            case "LiveCharts.Uwp.Series.DataLabels":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Series");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "DataLabels", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_190_Series_DataLabels;
                xamlMember.Setter = set_190_Series_DataLabels;
                break;
            case "LiveCharts.Uwp.Series.FontFamily":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Series");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "FontFamily", "Windows.UI.Xaml.Media.FontFamily");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_191_Series_FontFamily;
                xamlMember.Setter = set_191_Series_FontFamily;
                break;
            case "LiveCharts.Uwp.Series.FontSize":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Series");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "FontSize", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_192_Series_FontSize;
                xamlMember.Setter = set_192_Series_FontSize;
                break;
            case "LiveCharts.Uwp.Series.FontWeight":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Series");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "FontWeight", "Windows.UI.Text.FontWeight");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_193_Series_FontWeight;
                xamlMember.Setter = set_193_Series_FontWeight;
                break;
            case "LiveCharts.Uwp.Series.FontStyle":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Series");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "FontStyle", "Windows.UI.Text.FontStyle");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_194_Series_FontStyle;
                xamlMember.Setter = set_194_Series_FontStyle;
                break;
            case "LiveCharts.Uwp.Series.FontStretch":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Series");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "FontStretch", "Windows.UI.Text.FontStretch");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_195_Series_FontStretch;
                xamlMember.Setter = set_195_Series_FontStretch;
                break;
            case "LiveCharts.Uwp.Series.Foreground":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Series");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Foreground", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_196_Series_Foreground;
                xamlMember.Setter = set_196_Series_Foreground;
                break;
            case "LiveCharts.Uwp.Series.StrokeDashArray":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Series");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "StrokeDashArray", "Windows.UI.Xaml.Media.DoubleCollection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_197_Series_StrokeDashArray;
                xamlMember.Setter = set_197_Series_StrokeDashArray;
                break;
            case "LiveCharts.Uwp.Series.PointGeometry":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Series");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "PointGeometry", "LiveCharts.Uwp.PointGeometry");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_198_Series_PointGeometry;
                xamlMember.Setter = set_198_Series_PointGeometry;
                break;
            case "LiveCharts.Uwp.Series.ScalesXAt":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Series");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "ScalesXAt", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_199_Series_ScalesXAt;
                xamlMember.Setter = set_199_Series_ScalesXAt;
                break;
            case "LiveCharts.Uwp.Series.ScalesYAt":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Series");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "ScalesYAt", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_200_Series_ScalesYAt;
                xamlMember.Setter = set_200_Series_ScalesYAt;
                break;
            case "LiveCharts.Uwp.Series.LabelPoint":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Series");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "LabelPoint", "System.Func`2<LiveCharts.ChartPoint, String>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_201_Series_LabelPoint;
                xamlMember.Setter = set_201_Series_LabelPoint;
                break;
            case "LiveCharts.Uwp.Series.Configuration":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Series");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Configuration", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_202_Series_Configuration;
                xamlMember.Setter = set_202_Series_Configuration;
                break;
            case "LiveCharts.Uwp.Separator.Step":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Separator");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Step", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_203_Separator_Step;
                xamlMember.Setter = set_203_Separator_Step;
                break;
            case "LiveCharts.Uwp.Separator.Chart":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Separator");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Chart", "LiveCharts.Charts.ChartCore");
                xamlMember.Getter = get_204_Separator_Chart;
                xamlMember.Setter = set_204_Separator_Chart;
                break;
            case "LiveCharts.Uwp.Separator.Stroke":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Separator");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Stroke", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_205_Separator_Stroke;
                xamlMember.Setter = set_205_Separator_Stroke;
                break;
            case "LiveCharts.Uwp.Separator.StrokeThickness":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Separator");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "StrokeThickness", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_206_Separator_StrokeThickness;
                xamlMember.Setter = set_206_Separator_StrokeThickness;
                break;
            case "LiveCharts.Uwp.Separator.StrokeDashArray":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Separator");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "StrokeDashArray", "Windows.UI.Xaml.Media.DoubleCollection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_207_Separator_StrokeDashArray;
                xamlMember.Setter = set_207_Separator_StrokeDashArray;
                break;
            case "LiveCharts.Uwp.Separator.AxisOrientation":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Separator");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "AxisOrientation", "LiveCharts.AxisOrientation");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_208_Separator_AxisOrientation;
                xamlMember.SetIsReadOnly();
                break;
            case "GuzzlerMobileApp.views.realTimePower.DevName":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.views.realTimePower");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "DevName", "String");
                xamlMember.Getter = get_209_realTimePower_DevName;
                xamlMember.Setter = set_209_realTimePower_DevName;
                break;
            case "GuzzlerMobileApp.views.realTimePower.ChartValues":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.views.realTimePower");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "ChartValues", "LiveCharts.ChartValues`1<GuzzlerMobileApp.views.MeasureModel>");
                xamlMember.Getter = get_210_realTimePower_ChartValues;
                xamlMember.Setter = set_210_realTimePower_ChartValues;
                break;
            case "GuzzlerMobileApp.views.MeasureModel.DateTime":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.views.MeasureModel");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "DateTime", "System.DateTime");
                xamlMember.Getter = get_211_MeasureModel_DateTime;
                xamlMember.Setter = set_211_MeasureModel_DateTime;
                break;
            case "GuzzlerMobileApp.views.MeasureModel.Value":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.views.MeasureModel");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Value", "Double");
                xamlMember.Getter = get_212_MeasureModel_Value;
                xamlMember.Setter = set_212_MeasureModel_Value;
                break;
            case "GuzzlerMobileApp.views.realTimePower.DateTimeFormatter":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.views.realTimePower");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "DateTimeFormatter", "System.Func`2<Double, String>");
                xamlMember.Getter = get_213_realTimePower_DateTimeFormatter;
                xamlMember.Setter = set_213_realTimePower_DateTimeFormatter;
                break;
            case "GuzzlerMobileApp.views.realTimePower.AxisStep":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.views.realTimePower");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "AxisStep", "Double");
                xamlMember.Getter = get_214_realTimePower_AxisStep;
                xamlMember.Setter = set_214_realTimePower_AxisStep;
                break;
            case "GuzzlerMobileApp.views.realTimePower.AxisMax":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.views.realTimePower");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "AxisMax", "Double");
                xamlMember.Getter = get_215_realTimePower_AxisMax;
                xamlMember.Setter = set_215_realTimePower_AxisMax;
                break;
            case "GuzzlerMobileApp.views.realTimePower.AxisMin":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.views.realTimePower");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "AxisMin", "Double");
                xamlMember.Getter = get_216_realTimePower_AxisMin;
                xamlMember.Setter = set_216_realTimePower_AxisMin;
                break;
            case "GuzzlerMobileApp.views.realTimePower.Timer":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.views.realTimePower");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Timer", "Windows.UI.Xaml.DispatcherTimer");
                xamlMember.Getter = get_217_realTimePower_Timer;
                xamlMember.Setter = set_217_realTimePower_Timer;
                break;
            case "GuzzlerMobileApp.views.realTimePower.IsDataInjectionRunning":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.views.realTimePower");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "IsDataInjectionRunning", "Boolean");
                xamlMember.Getter = get_218_realTimePower_IsDataInjectionRunning;
                xamlMember.Setter = set_218_realTimePower_IsDataInjectionRunning;
                break;
            case "GuzzlerMobileApp.views.realTimePower.R":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.views.realTimePower");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "R", "System.Random");
                xamlMember.Getter = get_219_realTimePower_R;
                xamlMember.Setter = set_219_realTimePower_R;
                break;
            case "GuzzlerMobileApp.views.regDev.DevName":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.views.regDev");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "DevName", "String");
                xamlMember.Getter = get_220_regDev_DevName;
                xamlMember.Setter = set_220_regDev_DevName;
                break;
            case "GuzzlerMobileApp.views.regDev.Manufacturer":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.views.regDev");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Manufacturer", "String");
                xamlMember.Getter = get_221_regDev_Manufacturer;
                xamlMember.Setter = set_221_regDev_Manufacturer;
                break;
            case "GuzzlerMobileApp.views.regDev.GuzzlerId":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.views.regDev");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "GuzzlerId", "String");
                xamlMember.Getter = get_222_regDev_GuzzlerId;
                xamlMember.Setter = set_222_regDev_GuzzlerId;
                break;
            case "GuzzlerMobileApp.views.regDev.DevType":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.views.regDev");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "DevType", "String");
                xamlMember.Getter = get_223_regDev_DevType;
                xamlMember.Setter = set_223_regDev_DevType;
                break;
            case "GuzzlerMobileApp.views.regDev.Model":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.views.regDev");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Model", "String");
                xamlMember.Getter = get_224_regDev_Model;
                xamlMember.Setter = set_224_regDev_Model;
                break;
            case "GuzzlerMobileApp.views.regDev.Serial":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.views.regDev");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Serial", "String");
                xamlMember.Getter = get_225_regDev_Serial;
                xamlMember.Setter = set_225_regDev_Serial;
                break;
            case "GuzzlerMobileApp.views.specialDev.DeviceName":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("GuzzlerMobileApp.views.specialDev");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "DeviceName", "String");
                xamlMember.Getter = get_226_specialDev_DeviceName;
                xamlMember.SetIsReadOnly();
                break;
            case "LiveCharts.Uwp.Points.PieSlice.Radius":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Points.PieSlice");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Radius", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_227_PieSlice_Radius;
                xamlMember.Setter = set_227_PieSlice_Radius;
                break;
            case "LiveCharts.Uwp.Points.PieSlice.PushOut":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Points.PieSlice");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "PushOut", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_228_PieSlice_PushOut;
                xamlMember.Setter = set_228_PieSlice_PushOut;
                break;
            case "LiveCharts.Uwp.Points.PieSlice.InnerRadius":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Points.PieSlice");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "InnerRadius", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_229_PieSlice_InnerRadius;
                xamlMember.Setter = set_229_PieSlice_InnerRadius;
                break;
            case "LiveCharts.Uwp.Points.PieSlice.WedgeAngle":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Points.PieSlice");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "WedgeAngle", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_230_PieSlice_WedgeAngle;
                xamlMember.Setter = set_230_PieSlice_WedgeAngle;
                break;
            case "LiveCharts.Uwp.Points.PieSlice.RotationAngle":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Points.PieSlice");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "RotationAngle", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_231_PieSlice_RotationAngle;
                xamlMember.Setter = set_231_PieSlice_RotationAngle;
                break;
            case "LiveCharts.Uwp.Points.PieSlice.XOffset":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Points.PieSlice");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "XOffset", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_232_PieSlice_XOffset;
                xamlMember.Setter = set_232_PieSlice_XOffset;
                break;
            case "LiveCharts.Uwp.Points.PieSlice.YOffset":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Points.PieSlice");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "YOffset", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_233_PieSlice_YOffset;
                xamlMember.Setter = set_233_PieSlice_YOffset;
                break;
            case "LiveCharts.Uwp.Points.PieSlice.Percentage":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Points.PieSlice");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "Percentage", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_234_PieSlice_Percentage;
                xamlMember.SetIsReadOnly();
                break;
            case "LiveCharts.Uwp.Points.PieSlice.PieceValue":
                userType = (global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlUserType)GetXamlTypeByName("LiveCharts.Uwp.Points.PieSlice");
                xamlMember = new global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlMember(this, "PieceValue", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_235_PieSlice_PieceValue;
                xamlMember.Setter = set_235_PieSlice_PieceValue;
                break;
            }
            return xamlMember;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlSystemBaseType
    {
        global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (_enumValues != null)
            {
                int value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    int enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::GuzzlerMobileApp.GuzzlerMobileApp_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}

